var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,2.058,1,1.847]],["body/components/AppComponent.html",[0,2.533,1,2.536,2,3.275,3,0.218,4,0.218,5,2.164,6,2.164,7,2.164,8,0.189,9,1.803,10,0.776,11,3.951,12,2.164,13,3.951,14,3.951,15,3.292,16,3.275,17,3.275,18,3.275,19,3.275,20,0.218,21,0.586,22,1.002,23,1.121,24,5.172,25,3.951,26,3.951,27,4.734,28,4.734,29,3.951,30,5.172,31,0.709,32,4.406,33,1.338,34,4.149,35,3.275,36,3.275,37,4.406,38,2.368,39,2.164,40,4.98,41,2.694,42,1.142,43,3.275,44,0.936,45,0.034,46,1.121,47,0.722,48,0.936,49,2.164,50,0.766,51,3.671,52,3.275,53,2.839,54,2.164,55,5.559,56,3.275,57,3.275,58,3.275,59,1.006,60,1.193,61,3.275,62,1.095,63,3.951,64,4.406,65,3.671,66,3.275,67,0.927,68,2.164,69,3.192,70,4.874,71,3.275,72,2.368,73,3.671,74,3.951,75,2.164,76,2.368,77,2.728,78,2.728,79,3.275,80,3.275,81,3.275,82,4.149,83,2.368,84,1.636,85,1.502,86,2.164,87,2.164,88,3.951,89,3.275,90,4.406,91,2.164,92,2.533,93,2.164,94,0.709,95,1.051,96,2.164,97,2.164,98,2.164,99,2.728,100,0.545,101,1.245,102,2.164,103,1.565,104,0.281,105,1.387,106,2.164,107,1.803,108,2.164,109,0.218,110,0.097,111,2.164,112,2.164,113,2.164,114,2.164,115,2.164,116,0.847,117,2.164,118,2.164,119,3.601,120,2.164,121,2.164,122,2.164,123,2.728,124,2.164,125,2.164,126,2.164,127,2.164,128,2.164,129,0.387,130,2.728,131,3.275,132,2.164,133,2.728,134,2.728,135,2.728,136,3.275,137,2.164,138,2.164,139,1.387,140,2.164,141,2.164,142,0.427,143,2.164,144,4.406,145,4.406,146,1.193,147,3.275,148,4.406,149,1.006,150,4.98,151,3.275,152,3.275,153,2.099,154,3.275,155,3.275,156,1.565,157,3.275,158,3.275,159,2.164,160,2.164,161,2.164,162,2.164,163,0.017,164,0.017]],["title/modules/AppModule.html",[165,2.058,166,2.058]],["body/modules/AppModule.html",[1,3.628,3,0.375,4,0.375,8,0.324,41,3.088,45,0.034,72,2.685,100,0.732,101,2.136,103,2.685,107,3.093,109,0.375,110,0.166,156,2.685,163,0.025,164,0.025,165,2.38,166,4.062,167,2.136,168,2.136,169,4.412,170,4.412,171,3.83,172,2.685,173,3.093,174,3.093,175,3.093,176,3.093,177,3.093,178,3.412,179,4.939,180,3.987,181,3.093,182,3.093,183,3.713,184,3.987,185,4.786,186,3.093,187,4.786,188,3.093,189,3.987,190,4.786,191,4.786,192,4.786,193,3.713,194,3.713,195,4.786,196,3.713,197,4.786,198,3.713,199,4.786,200,3.713,201,4.786,202,3.987,203,2.685,204,4.786,205,3.713,206,2.685,207,3.713,208,3.713]],["title/modules/AppRoutingModule.html",[165,2.058,178,1.847]],["body/modules/AppRoutingModule.html",[3,0.48,4,0.48,8,0.416,45,0.033,100,0.642,101,2.74,109,0.48,110,0.213,163,0.029,164,0.029,167,2.74,172,3.444,178,3.21,184,3.967,189,4.647,206,3.444,209,4.762,210,5.578,211,4.278,212,1.343,213,4.762]],["title/classes/Exercise.html",[53,1.522,110,0.144]],["body/classes/Exercise.html",[3,0.425,4,0.425,8,0.368,20,0.425,21,0.928,38,3.749,42,1.155,44,0.998,45,0.034,46,1.484,47,0.761,48,0.998,53,2.458,67,1.028,100,0.485,104,0.548,109,0.425,110,0.188,163,0.027,164,0.027,214,0.998,215,3.511,216,4.428,217,1.235,218,4.214,219,1.096,220,4.349,221,5.184,222,4.214,223,4.214,224,4.214,225,4.214,226,4.214]],["title/classes/Exercise01Strategy.html",[110,0.144,227,1.522]],["body/classes/Exercise01Strategy.html",[3,0.267,4,0.267,8,0.231,10,0.901,20,0.267,21,0.681,22,0.867,23,1.219,31,0.823,33,1.362,42,1.015,44,1.054,45,0.034,46,1.054,47,0.669,48,1.054,50,0.833,59,1.168,62,1.272,67,0.956,77,3.706,78,3.169,84,1.168,85,1.073,92,1.699,94,1.278,95,0.877,100,0.305,104,0.344,109,0.267,110,0.119,116,0.984,129,0.797,139,1.699,142,0.959,146,1.385,149,1.646,163,0.02,164,0.02,214,0.628,217,0.523,219,0.797,227,1.803,228,1.511,229,1.057,230,3.083,231,0.574,232,1.386,233,1.151,234,4.449,235,3.804,236,1.272,237,0.963,238,1.381,239,3.804,240,3.804,241,3.804,242,3.804,243,3.804,244,3.804,245,3.804,246,3.804,247,3.804,248,1.699,249,3.804,250,4.449,251,2.109,252,1.917,253,1.77,254,5.646,255,2.54,256,3.804,257,1.51,258,4.05,259,2.173,260,4.861,261,3.515,262,4.463,263,3.804,264,3.515,265,3.116,266,2.438,267,1.493,268,3.169,269,2.438,270,2.751,271,1.646,272,0.901,273,2.208,274,1.493,275,1.592,276,1.493,277,1.888,278,2.532,279,4.861,280,4.861,281,4.861,282,3.116,283,2.532,284,2.751,285,2.106,286,2.751,287,0.901,288,2.651,289,2.189,290,2.189,291,2.189,292,3.804,293,2.438,294,2.106,295,2.438,296,4.861,297,2.651,298,2.651,299,2.651,300,4.449]],["title/classes/Exercise01Strategy-1.html",[110,0.121,142,0.532,227,1.279]],["body/classes/Exercise01Strategy-1.html",[3,0.241,4,0.241,8,0.208,10,0.834,20,0.241,21,0.631,22,0.836,23,1.096,31,0.762,33,1.326,42,0.973,44,0.992,45,0.034,46,0.992,47,0.641,48,0.992,50,0.799,51,2.934,59,1.082,62,1.401,67,0.922,84,1.082,85,0.993,94,1.265,95,0.973,100,0.275,104,0.31,109,0.241,110,0.107,116,1.196,119,3.734,129,0.631,142,0.826,149,1.421,163,0.018,164,0.018,212,0.993,214,0.565,217,0.47,219,0.75,227,1.67,229,1.018,230,2.971,231,0.516,232,1.336,233,1.083,236,1.178,237,0.762,238,1.242,248,1.529,253,1.684,257,2.049,259,1.684,261,3.734,265,2.965,267,1.421,270,3.965,271,1.795,272,0.834,273,1.987,274,1.684,275,1.783,276,1.684,277,1.834,283,2.966,285,2.375,287,0.834,301,2.971,302,3.028,303,3.522,304,3.522,305,2.532,306,4.625,307,2.385,308,3.522,309,3.522,310,2.934,311,2.547,312,1.835,313,3.522,314,3.522,315,3.522,316,3.522,317,2.934,318,3.522,319,2.049,320,4.302,321,2.258,322,2.547,323,2.547,324,3.522,325,3.522,326,2.934,327,4.302,328,3.853,329,3.853,330,1.835,331,3.853,332,3.344,333,3.853,334,2.934,335,2.385,336,4.625,337,4.625,338,2.409,339,4.625,340,4.625,341,3.853,342,4.625,343,4.625,344,2.385,345,2.385,346,2.385,347,2.385,348,2.385,349,2.385,350,2.027,351,3.853,352,1.67,353,2.385,354,2.385,355,3.522,356,2.385,357,3.522,358,2.385,359,2.385,360,2.385,361,2.385,362,0.733,363,4.188]],["title/classes/Exercise02Strategy.html",[110,0.144,364,1.391]],["body/classes/Exercise02Strategy.html",[3,0.196,4,0.196,8,0.169,10,0.714,20,0.196,21,0.54,22,0.772,23,1.13,31,0.652,33,1.369,42,0.982,44,1.13,45,0.034,46,1.13,47,0.647,48,1.13,50,0.904,59,0.926,62,1.595,67,1.004,76,3.011,83,3.011,84,0.596,85,0.85,94,1.19,95,0.594,100,0.223,104,0.252,109,0.196,110,0.087,116,1.234,129,0.891,142,0.383,146,2.084,149,1.659,163,0.016,164,0.016,212,1.404,214,0.46,216,2.18,217,0.383,219,0.661,228,1.451,229,1.015,231,0.42,232,0.956,233,0.956,236,1.008,237,0.652,251,1.429,253,1.516,255,2.262,257,1.652,259,1.516,267,1.279,271,1.738,272,0.714,274,1.279,275,1.69,276,1.279,277,1.806,278,1.57,284,2.18,285,2.229,287,0.714,291,1.734,293,1.932,294,0.841,295,2.368,305,2.439,312,2.169,319,1.196,322,2.18,323,2.18,330,1.466,362,0.926,364,1.306,365,2.68,366,3.014,367,3.014,368,3.014,369,3.014,370,1.404,371,2.511,372,2.807,373,1.942,374,2.511,375,2.396,376,3.383,377,3.469,378,3.011,379,3.011,380,3.974,381,3.469,382,3.974,383,2.511,384,2.511,385,1.942,386,3.974,387,3.974,388,3.078,389,1.932,390,2.511,391,2.511,392,1.932,393,2.511,394,1.932,395,2.511,396,2.511,397,2.511,398,1.942,399,2.396,400,3.45,401,4.038,402,3.739,403,3.298,404,2.511,405,2.511,406,1.942,407,2.511,408,1.404,409,2.169,410,1.932,411,2.511,412,3.011,413,2.511,414,2.511,415,2.511,416,1.57,417,2.511,418,2.511,419,3.469,420,2.511,421,2.511,422,1.618,423,2.669,424,1.932,425,3.469,426,3.469,427,0.46,428,3.078,429,2.511,430,1.618,431,1.618,432,1.618,433,1.618,434,1.618,435,1.245,436,1.618,437,1.618,438,1.618,439,1.618,440,1.618,441,1.618,442,2.511,443,1.618,444,1.618,445,1.618,446,1.618,447,3.469,448,1.404,449,1.618,450,1.618,451,1.404,452,1.618,453,1.404,454,1.404,455,1.618,456,1.618,457,1.618,458,1.618,459,1.618,460,1.618,461,1.618,462,1.618,463,1.618,464,3.078,465,1.618,466,1.618,467,1.618]],["title/classes/Exercise02Strategy-1.html",[110,0.121,142,0.532,364,1.169]],["body/classes/Exercise02Strategy-1.html",[3,0.157,4,0.157,8,0.135,10,0.598,20,0.157,21,0.452,22,0.7,23,1.025,31,0.546,33,1.367,42,0.969,44,1.08,45,0.034,46,1.08,47,0.638,48,1.08,50,0.867,59,0.775,60,1.73,62,1.35,67,0.853,84,0.775,85,0.712,94,1.291,95,0.498,100,0.179,104,0.202,109,0.157,110,0.069,116,1.306,129,0.723,142,1.057,146,2.085,149,1.646,153,2.043,163,0.013,164,0.013,214,0.368,217,0.306,219,0.571,229,0.996,231,0.336,232,1.119,233,0.824,236,0.844,237,0.546,238,0.809,248,0.995,251,2.578,253,1.47,255,1.914,257,2.426,258,3.058,259,2.049,261,4.028,265,3.311,267,1.4,271,1.618,272,0.598,274,1.551,275,1.729,276,1.618,282,3.769,283,2.475,286,4.141,287,0.598,301,2.905,302,2.305,312,3.193,319,2.09,330,2.09,332,4.409,362,0.477,364,1.093,365,2.629,375,3.508,378,3.436,394,3.571,399,1.452,401,2.305,422,1.293,435,1.617,448,1.123,468,2.523,469,2.523,470,2.523,471,2.523,472,2.523,473,2.523,474,5.166,475,5.166,476,1.552,477,5.357,478,4.751,479,4.326,480,3.671,481,2.523,482,1.825,483,5.268,484,3.377,485,4.326,486,5.268,487,2.654,488,3.671,489,5.268,490,2.654,491,2.523,492,1.552,493,5.94,494,2.523,495,1.552,496,3.045,497,4.751,498,4.751,499,4.751,500,5.357,501,5.166,502,1.552,503,1.552,504,3.187,505,3.187,506,3.187,507,3.187,508,2.655,509,3.187,510,3.187,511,2.523,512,1.552,513,2.102,514,2.523,515,1.552,516,2.523,517,2.523,518,1.552,519,1.552,520,1.552,521,1.552,522,1.552,523,1.552,524,1.552,525,1.552]],["title/classes/Exercise03Strategy.html",[110,0.144,526,1.522]],["body/classes/Exercise03Strategy.html",[3,0.269,4,0.269,8,0.232,10,0.904,20,0.385,21,0.683,22,0.835,23,1.221,31,0.826,33,1.463,42,1.152,44,1.363,45,0.033,46,1.363,47,0.759,48,1.363,50,0.945,59,1.172,60,1.39,62,1.276,67,1.029,84,0.818,85,0.751,94,1.322,95,0.753,100,0.307,104,0.346,109,0.269,110,0.119,116,0.689,146,1.624,149,1.496,163,0.02,164,0.02,214,0.631,217,0.525,219,0.799,228,1.667,229,1.166,231,0.576,232,1.154,233,1.154,236,1.276,237,0.826,238,1.387,251,2.544,266,1.707,267,1.37,271,1.648,272,0.904,274,1.37,275,1.513,276,1.37,277,1.977,278,2.944,282,2.446,285,2.324,287,0.631,317,3.716,330,1.77,338,2.537,341,3.179,352,1.263,392,2.859,409,2.323,416,1.988,526,1.809,527,3.402,528,3.817,529,3.817,530,3.817,531,3.817,532,3.817,533,3.817,534,3.817,535,2.663,536,4.872,537,4.872,538,2.663,539,2.663,540,2.663,541,4.872,542,2.663,543,3.817,544,2.663,545,2.663,546,2.663,547,2.663,548,3.817,549,2.219,550,2.663,551,2.663,552,2.663,553,2.663,554,2.219,555,3.817,556,4.872,557,3.88,558,3.88,559,4.872,560,4.872,561,2.219,562,2.663,563,2.76,564,3.817,565,3.817,566,3.817,567,3.817,568,3.817,569,3.817,570,2.663]],["title/classes/Exercise03Strategy-1.html",[110,0.121,142,0.532,526,1.279]],["body/classes/Exercise03Strategy-1.html",[3,0.257,4,0.257,8,0.223,10,0.876,20,0.257,21,0.663,22,0.856,23,1.031,31,0.801,33,1.479,42,1.123,44,1.253,45,0.034,46,1.253,47,0.74,48,1.253,50,0.883,59,1.137,62,0.853,67,1.031,84,1.337,85,1.228,94,1.233,95,0.859,100,0.294,104,0.332,109,0.257,110,0.114,116,0.66,119,3.148,129,0.977,149,1.137,163,0.019,164,0.019,212,1.228,214,0.604,217,0.503,219,0.78,229,1.141,231,0.552,232,1.473,233,1.126,236,1.237,237,0.801,238,1.329,248,1.635,252,1.845,253,1.347,259,1.347,266,3.061,267,1.137,270,3.453,271,1.467,272,0.876,274,1.467,275,1.576,276,1.467,277,1.597,283,2.754,285,2.069,287,0.876,291,2.505,301,3.329,319,1.895,320,3.979,326,3.083,327,3.083,328,3.979,329,3.979,330,1.468,331,3.979,332,3.453,333,3.979,334,3.083,351,4.405,362,1.137,526,1.754,527,3.329,561,2.125,571,4.354,572,4.354,573,3.7,574,3.7,575,3.7,576,3.7,577,5.455,578,3.7,579,3.7,580,2.551,581,3.7,582,3.7,583,2.551,584,3.7,585,3.7,586,4.776,587,2.551,588,2.125,589,2.125,590,1.845,591,3.7,592,3.7,593,3.7,594,3.7,595,4.354,596,2.551,597,2.551,598,2.551,599,2.551,600,3.7,601,2.551,602,2.551,603,5.07,604,3.7,605,2.551,606,3.7,607,2.551,608,3.7,609,2.551]],["title/classes/Exercise04Strategy.html",[110,0.144,610,2.058]],["body/classes/Exercise04Strategy.html",[3,0.255,4,0.255,8,0.221,10,0.872,20,0.437,21,0.659,22,0.854,23,1.197,31,0.796,33,1.347,42,0.997,44,1.127,45,0.034,46,1.127,47,0.657,48,1.127,50,0.854,59,1.13,60,0.922,62,1.231,67,1.019,84,0.778,85,0.714,94,1.346,95,0.938,100,0.291,104,0.329,109,0.255,110,0.113,116,0.952,129,0.776,142,0.855,146,1.733,153,3.05,163,0.019,164,0.019,212,1.573,214,0.6,217,0.499,219,0.776,228,1.487,229,1.04,231,0.548,232,1.121,233,1.121,236,1.231,237,0.796,238,1.319,257,2.093,265,3.05,266,3.05,267,1.462,271,1.462,272,0.872,274,1.462,275,1.72,276,1.462,277,1.231,282,3.574,287,0.872,291,2.738,293,1.623,294,1.878,295,2.359,321,3.05,330,1.888,352,2.396,362,1.462,376,2.117,379,3.441,392,3.05,409,2.478,435,1.623,496,2.359,554,2.109,610,2.359,611,3.814,612,3.68,613,3.065,614,3.68,615,2.532,616,3.065,617,2.109,618,4.759,619,4.759,620,4.759,621,2.532,622,3.68,623,4.759,624,3.68,625,3.68,626,3.68,627,3.68,628,3.68,629,2.532,630,2.532,631,2.532,632,2.532,633,2.532,634,1.831,635,2.532,636,3.68,637,3.68,638,3.68,639,3.68,640,4.759,641,4.759,642,3.68,643,3.68,644,4.759,645,4.759,646,3.441,647,4.335,648,2.532,649,3.68,650,2.532]],["title/classes/Exercise05Strategy.html",[110,0.144,651,1.847]],["body/classes/Exercise05Strategy.html",[3,0.322,4,0.496,8,0.278,10,1.025,20,0.532,21,0.775,22,0.919,23,1.164,31,0.937,33,1.42,42,1.086,44,1.248,45,0.034,46,1.248,47,0.716,48,1.248,50,0.853,59,1.329,60,1.161,67,0.981,84,0.98,85,0.899,94,1.342,95,0.854,100,0.367,104,0.414,109,0.322,110,0.143,129,0.88,163,0.022,164,0.022,212,1.486,214,0.755,217,0.629,219,0.88,228,1.602,229,1.12,231,0.69,232,1.271,233,1.271,236,1.447,237,0.937,272,1.025,287,1.025,289,3.402,290,3.402,362,1.329,427,0.755,490,2.306,588,2.657,589,2.657,646,2.306,651,2.491,652,3.641,653,4.328,654,4.328,655,3.189,656,3.606,657,4.841,658,3.026,659,3.189,660,4.093,661,3.606,662,3.189,663,3.606,664,3.606,665,2.657,666,2.657,667,2.657,668,2.657,669,2.657,670,2.657,671,2.657,672,2.657,673,2.657,674,2.657,675,3.606,676,2.657,677,2.657,678,3.606,679,2.657,680,2.657,681,3.606,682,3.606,683,2.657]],["title/classes/Exercise06Strategy.html",[110,0.144,684,1.847]],["body/classes/Exercise06Strategy.html",[3,0.262,4,0.262,8,0.227,10,0.889,20,0.262,21,0.672,22,0.861,23,1.261,31,0.812,33,1.421,42,1.082,44,1.261,45,0.034,46,1.261,47,0.713,48,1.261,50,0.909,59,1.152,62,1.611,67,0.979,84,0.799,85,0.733,94,1.309,95,0.74,100,0.299,104,0.338,109,0.262,110,0.116,116,0.97,129,0.672,142,0.95,146,1.366,149,1.152,153,1.667,163,0.019,164,0.019,212,1.241,214,0.616,217,0.513,219,0.788,228,1.584,229,1.108,231,0.563,232,1.138,233,1.138,236,1.255,237,0.812,253,1.366,255,1.233,257,2.305,259,1.86,267,1.152,268,2.166,271,1.152,272,0.889,274,1.807,275,1.759,276,1.725,277,1.708,278,2.858,286,2.713,287,0.889,289,2.159,290,2.159,294,2.087,305,2.284,319,2.027,338,2.858,350,2.159,352,1.778,362,0.799,370,1.88,372,2.789,376,3.157,389,2.405,408,1.88,412,1.88,416,1.954,423,3.412,427,0.616,508,2.166,613,3.125,616,2.166,617,2.166,684,2.159,685,3.6,686,3.751,687,3.751,688,3.751,689,3.125,690,2.6,691,3.666,692,3.666,693,3.666,694,4.014,695,3.125,696,2.6,697,2.6,698,2.6,699,3.751,700,3.125,701,4.014,702,4.014,703,4.014,704,2.6,705,2.166,706,2.166,707,3.125,708,3.125,709,2.166,710,2.166,711,2.166,712,2.166,713,2.166,714,2.166,715,2.166,716,2.166,717,2.166]],["title/classes/Exercise07Strategy.html",[110,0.144,718,1.847]],["body/classes/Exercise07Strategy.html",[3,0.14,4,0.14,8,0.121,10,0.544,20,0.383,21,0.411,22,0.663,23,0.97,31,0.497,33,1.44,42,1.056,44,1.229,45,0.034,46,1.229,47,0.696,48,1.229,50,0.897,59,0.705,60,1.889,62,1.45,67,0.965,84,0.705,85,0.647,92,0.887,94,1.123,95,0.957,100,0.159,104,0.18,109,0.14,110,0.062,116,1.122,129,0.929,139,0.887,142,1.004,146,1.246,149,1.051,163,0.012,164,0.012,212,1.223,214,0.328,217,0.273,219,0.527,228,1.529,229,1.069,231,0.299,232,1.059,233,0.761,236,0.767,237,0.497,251,2.6,252,1,253,1.382,255,1.394,259,1.653,264,2.475,267,1.051,269,1.471,271,1.665,272,0.544,274,1.394,275,1.603,276,1.394,277,2.009,283,1.783,285,1.966,287,0.544,294,0.994,305,2.827,311,1,312,1.195,319,1.506,321,2.433,330,0.549,338,2.364,350,1.321,352,1.088,362,0.425,370,1,375,2.986,394,0.887,399,2.184,402,2.624,403,2.194,408,1,409,1.195,410,1.471,416,0.72,424,2.909,427,0.328,482,2.127,484,2.433,487,1.659,496,2.433,549,1.152,557,3.136,558,1,563,3.282,590,1,634,1.659,658,1.783,718,1.321,719,3.476,720,3.162,721,2.295,722,2.295,723,2.295,724,2.295,725,2.295,726,2.295,727,2.295,728,2.295,729,2.295,730,2.295,731,2.295,732,1.383,733,2.852,734,1.912,735,2.45,736,3.781,737,1.383,738,2.45,739,4.66,740,1.912,741,1.912,742,2.745,743,3.41,744,1.912,745,1.383,746,3.162,747,1.912,748,1.912,749,1.912,750,1.912,751,1.912,752,3.162,753,2.852,754,2.45,755,2.45,756,2.45,757,2.45,758,1.383,759,3.326,760,3.613,761,1.383,762,1.912,763,3.613,764,2.852,765,1.912,766,3.162,767,2.852,768,2.852,769,2.45,770,3.162,771,3.162,772,3.162,773,2.745,774,1.912,775,1.912,776,1.383,777,4.459,778,1.383,779,1.383,780,1.912,781,1.383,782,1.912,783,1.383,784,1.912,785,1.383,786,1.912,787,1.383,788,1.383,789,1.383,790,1.383,791,1.383,792,1.912,793,1.383,794,1.912,795,1.383,796,1.383,797,1.383,798,1.383,799,1.383,800,2.852,801,1.383,802,3.781,803,3.781,804,3.781,805,1.912,806,1.912,807,2.45,808,2.852,809,1.912,810,1.912,811,1.912,812,1.912,813,1.152,814,1.152,815,1.152,816,1.152,817,1.152,818,1.912,819,1.152,820,1.912,821,1.912,822,1.152,823,1.912,824,1.152,825,1.152,826,1.152,827,2.852,828,3.613,829,2.45,830,1.152,831,1.912,832,2.45,833,1.152,834,1.152,835,1.152,836,1.152,837,1.152,838,1.152,839,1.152,840,1.152,841,1.912,842,1.912,843,1.912,844,1.912,845,1.152,846,1.152,847,1.152,848,2.45,849,2.45,850,1.152,851,1.912,852,1.152,853,1.152,854,1.152,855,1.152,856,1.912,857,1.152,858,1.912,859,1.152]],["title/classes/Exercise2023Helper.html",[110,0.144,860,2.058]],["body/classes/Exercise2023Helper.html",[3,0.354,4,0.354,8,0.306,20,0.354,22,0.568,31,0.999,42,0.692,45,0.034,50,0.568,53,2.444,69,4.195,100,0.695,104,0.456,109,0.354,110,0.157,129,0.628,163,0.024,164,0.024,214,0.831,217,1.174,220,4.632,227,2.187,228,1.678,229,1.174,230,2.019,364,1.999,365,1.828,526,2.187,527,2.019,610,2.957,611,2.538,651,2.655,652,2.25,684,2.655,685,2.25,718,2.655,719,2.25,773,2.538,860,2.957,861,2.924,862,3.727,863,3.959,864,3.509,865,2.924,866,3.509,867,2.924,868,3.509,869,3.509,870,2.924,871,3.509,872,3.509,873,2.924,874,3.509,875,2.924,876,3.509,877,3.509,878,3.509,879,2.924,880,3.509,881,2.924,882,3.509,883,2.924,884,2.924,885,2.924,886,2.924,887,2.924,888,2.924,889,2.924,890,2.924,891,2.924,892,2.924,893,2.924,894,2.924,895,2.924,896,2.924,897,2.924,898,2.924,899,2.924,900,2.924]],["title/classes/Exercise2024Helper.html",[110,0.144,901,2.058]],["body/classes/Exercise2024Helper.html",[3,0.371,4,0.371,8,0.321,20,0.371,22,0.595,31,1.03,42,0.725,45,0.034,50,0.595,53,2.5,60,1.339,69,4.191,100,0.642,104,0.478,109,0.371,110,0.164,129,0.658,142,0.725,163,0.024,164,0.024,214,0.871,217,1.04,220,4.691,227,2.255,229,1.04,230,2.116,301,3.034,364,2.06,365,1.915,454,2.659,484,2.357,526,2.255,527,2.116,862,3.813,863,4.031,865,3.063,867,3.063,870,3.063,873,3.063,875,3.063,879,3.063,881,3.063,883,3.063,884,3.063,885,3.063,886,3.063,887,3.063,888,3.063,889,3.063,890,3.063,891,3.063,892,3.063,893,3.063,894,3.063,895,3.063,896,3.063,897,3.063,898,3.063,899,3.063,900,3.063,901,3.049,902,3.063,903,3.677,904,5.272,905,3.677,906,3.677,907,3.677,908,3.677,909,3.677,910,3.677]],["title/classes/ExerciseHelper.html",[105,2.058,110,0.144]],["body/classes/ExerciseHelper.html",[3,0.446,4,0.446,8,0.386,20,0.446,22,0.716,31,1.156,42,0.873,44,1.048,45,0.034,46,1.048,47,0.575,48,1.048,50,0.716,53,2.719,67,0.928,70,4.778,82,3.686,99,3.686,100,0.66,104,0.575,105,3.423,109,0.446,110,0.198,129,1.027,163,0.027,164,0.027,214,1.048,860,2.836,862,4.147,863,3.861,901,2.836,911,3.686,912,5.34,913,4.424,914,4.424,915,4.424,916,4.424,917,4.424]],["title/interfaces/ExerciseStrategy.html",[219,0.575,427,0.76]],["body/interfaces/ExerciseStrategy.html",[3,0.46,4,0.46,8,0.398,20,0.46,23,1.287,31,1.176,42,1.072,44,1.287,45,0.033,46,1.287,47,0.706,48,1.287,50,0.88,59,1.669,67,1.009,94,1.302,104,0.755,109,0.46,163,0.028,164,0.028,219,0.973,231,0.986,236,1.817,272,1.287,287,1.287,427,1.079,918,2.373,919,4.555,920,4.555]],["title/injectables/FileService.html",[41,1.672,921,2.058]],["body/injectables/FileService.html",[3,0.384,4,0.384,8,0.333,15,3.175,20,0.384,22,0.868,31,1.053,34,4.467,38,2.756,41,2.535,42,0.96,44,1.153,45,0.034,46,1.153,47,0.632,48,1.153,50,0.788,62,1.274,65,4.054,67,0.914,100,0.617,101,2.193,109,0.384,110,0.17,116,0.986,123,3.175,129,0.871,130,3.175,133,3.175,134,3.175,135,3.175,163,0.025,164,0.025,188,3.175,212,1.593,237,0.825,257,2.242,262,4.707,269,3.621,275,1.373,302,2.756,310,4.054,453,2.756,513,4.973,921,3.12,922,3.811,923,3.175,924,4.867,925,3.811,926,5.97,927,3.811,928,4.867,929,3.811,930,4.867,931,4.867,932,4.867,933,4.867,934,4.867,935,3.811,936,3.175,937,3.811,938,3.811,939,3.811,940,3.811,941,3.811,942,3.811,943,3.811,944,3.811,945,3.811,946,3.811,947,3.811]],["title/interfaces/Game.html",[372,1.522,427,0.76]],["body/interfaces/Game.html",[3,0.264,4,0.264,8,0.228,10,0.62,20,0.264,21,0.675,22,0.61,23,1.145,33,1.213,45,0.034,47,0.49,50,0.863,67,0.997,76,2.726,83,2.726,85,0.738,94,1.241,95,0.743,100,0.301,104,0.34,109,0.264,110,0.117,116,1.38,129,0.984,142,0.516,146,2.002,149,1.573,163,0.019,164,0.019,212,1.551,216,3.704,217,0.516,219,0.675,228,0.738,229,0.516,231,0.567,232,0.677,233,0.677,237,0.567,251,1.241,253,1.373,255,2.094,257,1.496,259,1.373,267,1.158,271,1.639,272,0.62,274,1.158,275,1.641,276,1.158,277,1.713,278,1.363,284,1.893,285,2.094,287,0.62,291,2.169,293,2.416,294,1.134,295,2.832,305,2.717,312,1.963,319,1.039,322,1.893,323,1.893,330,1.039,362,1.158,364,1.134,365,1.363,371,2.181,372,2.822,374,2.181,375,2.169,376,3.238,377,3.141,378,2.726,379,2.726,380,3.68,381,3.141,382,3.68,383,2.181,384,2.181,386,3.141,387,3.141,388,2.181,389,1.678,390,2.181,391,2.181,392,1.678,393,2.181,394,1.678,395,2.181,396,2.181,397,2.181,399,2.169,400,3.195,401,3.858,402,3.607,403,3.098,404,2.181,405,2.181,407,2.181,409,1.963,410,1.678,411,2.181,412,2.726,413,2.181,414,2.181,415,2.181,416,1.363,417,2.181,418,2.181,419,3.141,420,2.181,421,2.181,423,2.416,424,1.678,425,3.141,426,3.141,427,0.62,428,4.444,429,3.141,430,2.181,431,2.181,432,2.181,433,2.181,434,2.181,435,1.678,436,2.181,437,2.181,438,2.181,439,2.181,440,2.181,441,2.181,442,3.141,443,2.181,444,2.181,445,2.181,446,2.181,447,4.026,448,1.893,449,2.181,450,2.181,451,1.893,452,2.181,453,1.893,454,1.893,455,2.181,456,2.181,457,2.181,458,2.181,459,2.181,460,2.181,461,2.181,462,2.181,463,2.181,464,3.68,465,2.181,466,2.181,467,2.181,918,1.363]],["title/interfaces/Game-1.html",[142,0.532,372,1.279,427,0.639]],["body/interfaces/Game-1.html",[3,0.355,4,0.355,8,0.307,10,0.833,20,0.355,21,0.827,22,0.748,23,1.094,33,1.222,45,0.034,47,0.6,50,0.748,67,0.887,94,1.361,95,0.911,100,0.405,104,0.457,109,0.355,110,0.157,116,1.195,129,0.827,142,1.08,149,1.08,163,0.024,164,0.024,212,1.455,217,0.693,219,0.827,228,0.991,229,0.693,231,0.761,232,0.909,233,0.909,237,0.761,253,1.28,257,2.174,259,1.682,267,1.08,271,1.08,272,0.833,274,1.683,275,1.704,276,1.584,277,1.544,278,2.406,287,0.833,289,2.023,290,2.023,294,2.373,305,2.19,319,1.395,338,2.687,350,2.658,352,2.19,362,1.08,372,2.823,376,2.968,389,2.253,423,2.96,427,0.833,684,2.023,685,2.253,689,2.928,691,3.848,692,2.928,693,2.928,694,3.848,695,2.928,700,2.928,701,3.848,702,3.848,703,3.848,705,4.564,706,4.564,707,3.848,708,3.848,709,2.928,710,2.928,711,2.928,712,2.928,713,2.928,714,2.928,715,2.928,716,2.928,717,2.928,918,1.831]],["title/interfaces/Hand.html",[427,0.76,759,2.058]],["body/interfaces/Hand.html",[3,0.211,4,0.211,8,0.182,10,0.495,20,0.47,21,0.571,22,0.516,23,0.916,33,1.305,45,0.034,47,0.414,50,0.754,60,1.861,67,0.97,92,1.339,94,1.192,95,1.039,100,0.24,104,0.272,109,0.211,110,0.093,116,1.322,129,1.03,139,1.339,142,0.969,146,0.761,149,0.98,163,0.016,164,0.016,212,1.441,217,0.412,219,0.571,228,0.589,229,0.412,231,0.452,232,0.825,233,0.54,237,0.452,251,2.423,253,1.161,255,1.512,259,1.576,264,2.306,267,0.98,269,1.339,271,1.509,272,0.495,274,1.329,275,1.58,276,1.329,277,1.977,283,1.661,285,1.875,287,0.495,294,1.381,305,2.755,311,1.511,312,1.088,319,1.266,321,2.044,330,0.829,338,2.254,350,1.835,352,1.512,362,0.642,375,2.682,399,1.835,402,2.479,403,2.044,409,1.088,410,1.339,416,1.088,424,2.774,427,0.495,482,2.797,484,2.988,487,1.511,496,2.044,557,3.13,558,1.511,563,3.13,590,1.511,634,1.511,658,1.661,718,1.202,719,1.339,720,2.657,733,3.222,734,1.741,735,1.741,736,3.606,738,1.741,739,4.498,740,1.741,741,1.741,742,3.13,743,3.222,744,1.741,746,2.657,747,1.741,748,1.741,749,1.741,750,1.741,751,1.741,752,2.657,753,1.741,754,1.741,755,1.741,756,1.741,757,1.741,759,3.461,760,3.883,762,1.741,763,2.657,764,2.657,765,1.741,766,3.222,767,2.657,768,2.657,769,1.741,770,3.222,771,3.222,772,3.222,773,3.695,774,1.741,775,1.741,777,4.389,780,1.741,782,1.741,784,1.741,786,1.741,792,1.741,794,1.741,800,3.222,802,3.606,803,3.606,804,3.606,805,1.741,806,1.741,807,4.093,808,3.606,809,2.657,810,2.657,811,2.657,812,2.657,813,1.741,814,1.741,815,1.741,816,1.741,817,1.741,818,2.657,819,1.741,820,2.657,821,2.657,822,1.741,823,2.657,824,1.741,825,1.741,826,1.741,827,3.606,828,4.257,829,3.222,830,1.741,831,2.657,832,3.222,833,1.741,834,1.741,835,1.741,836,1.741,837,1.741,838,1.741,839,1.741,840,1.741,841,2.657,842,2.657,843,2.657,844,2.657,845,1.741,846,1.741,847,1.741,848,3.222,849,3.222,850,1.741,851,2.657,852,1.741,853,1.741,854,1.741,855,1.741,856,2.657,857,1.741,858,2.657,859,1.741,918,1.088]],["title/interfaces/Map.html",[427,0.76,658,1.672]],["body/interfaces/Map.html",[3,0.372,4,0.597,8,0.321,10,0.872,20,0.563,21,0.853,22,0.771,33,1.25,45,0.034,47,0.686,60,1.341,67,0.903,94,1.37,95,0.939,100,0.424,104,0.479,109,0.372,110,0.165,129,0.945,163,0.025,164,0.025,212,1.573,217,0.726,219,0.853,228,1.039,229,0.726,231,0.797,232,0.953,233,0.953,237,0.797,272,0.872,287,0.872,289,3.21,290,3.21,362,1.463,427,0.872,490,2.663,646,2.663,651,2.119,652,2.361,656,3.068,657,4.812,658,3.081,660,3.967,661,3.068,663,4.812,664,4.812,665,3.068,666,3.068,667,3.068,668,3.068,669,3.068,670,3.068,671,3.068,672,3.068,673,3.068,674,3.068,675,3.967,676,3.068,677,3.068,678,3.967,679,3.068,680,3.068,681,3.967,682,3.967,683,3.068,918,1.918]],["title/coverage.html",[948,3.622]],["body/coverage.html",[0,2.327,1,2.089,8,0.317,9,3.025,41,1.891,45,0.033,47,0.472,53,1.721,69,2.327,95,1.223,104,0.472,105,2.327,110,0.284,163,0.024,164,0.024,215,3.025,219,0.65,227,2.237,228,1.762,229,1.251,230,2.715,231,1.379,237,0.786,301,3.015,364,2.044,365,2.729,372,2.237,427,1.362,526,2.237,527,2.715,610,2.327,611,2.626,651,2.089,652,3.024,658,1.891,684,2.089,685,3.024,718,2.089,719,3.024,759,2.327,860,2.327,861,3.025,901,2.327,902,3.025,911,3.025,921,2.327,923,3.025,948,3.025,949,3.631,950,3.631,951,3.631,952,3.631,953,3.631,954,3.025,955,3.631,956,3.025,957,3.631,958,5.24,959,4.718,960,4.718,961,3.631,962,3.631,963,5.548,964,3.631,965,3.631,966,4.718,967,3.631,968,3.631,969,3.631,970,3.631,971,3.631,972,3.631,973,3.631,974,3.631,975,3.631,976,3.631,977,3.631,978,3.631,979,3.631,980,3.631,981,3.631]],["title/dependencies.html",[168,2.217,982,2.247]],["body/dependencies.html",[45,0.034,101,2.685,103,3.374,163,0.028,164,0.028,168,2.685,186,3.887,202,4.592,203,3.986,206,3.374,936,3.887,983,4.666,984,6.379,985,4.666,986,5.512,987,4.666,988,4.666,989,4.666,990,4.666,991,4.666,992,4.666,993,4.666,994,4.666]],["title/index.html",[20,0.272,995,2.247,996,2.247]],["body/index.html",[45,0.033,72,3.256,163,0.028,164,0.028,168,2.591,400,3.256,995,3.751,996,3.751,997,5.396,998,5.778,999,4.502,1000,4.502,1001,4.502,1002,5.778,1003,4.502,1004,4.502,1005,4.502,1006,5.396,1007,4.502,1008,4.502,1009,4.502,1010,4.502,1011,4.502,1012,4.502,1013,5.396,1014,4.502,1015,4.502,1016,4.502,1017,4.502,1018,4.502,1019,4.502,1020,4.502,1021,4.502,1022,4.502,1023,4.502,1024,4.502,1025,4.502,1026,5.396,1027,5.396,1028,4.502,1029,4.502,1030,4.502,1031,4.502,1032,4.502,1033,4.502,1034,4.502]],["title/modules.html",[167,2.502]],["body/modules.html",[45,0.03,73,4.165,163,0.03,164,0.03,166,3.205,167,2.877,178,2.877,203,3.615,1035,4.999,1036,4.999,1037,5.738,1038,4.999]],["title/overview.html",[1039,3.622]],["body/overview.html",[0,2.891,1,3.619,41,3.012,45,0.032,60,1.643,95,0.89,142,1.065,156,3.262,163,0.028,164,0.028,165,2.891,166,4.131,167,2.596,168,2.596,169,3.758,170,3.758,171,3.262,172,3.262,173,3.758,174,3.758,175,3.758,176,3.758,177,3.758,178,3.328,179,4.818,180,4.5,181,3.758,182,3.758,214,1.068,451,3.262,742,3.262,918,2.349,921,2.891,1039,3.758]],["title/properties.html",[21,0.69,982,2.247]],["body/properties.html",[21,0.907,45,0.031,163,0.03,164,0.03,1040,5.065,1041,5.065]],["title/routes.html",[211,3.144]],["body/routes.html",[45,0.03,163,0.03,164,0.03,211,3.687]],["title/miscellaneous/variables.html",[1042,2.247,1043,3.209]],["body/miscellaneous/variables.html",[20,0.497,45,0.033,47,0.64,84,1.513,85,1.389,163,0.029,164,0.029,171,3.561,954,4.103,956,4.739,1042,4.103,1043,4.103,1044,4.925,1045,4.925,1046,4.925]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":1041,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":230,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"coverage.html":{}}}],["02",{"_index":365,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"interfaces/Game.html":{},"coverage.html":{}}}],["03",{"_index":527,"title":{},"body":{"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"coverage.html":{}}}],["04",{"_index":611,"title":{},"body":{"classes/Exercise04Strategy.html":{},"classes/Exercise2023Helper.html":{},"coverage.html":{}}}],["05",{"_index":652,"title":{},"body":{"classes/Exercise05Strategy.html":{},"classes/Exercise2023Helper.html":{},"interfaces/Map.html":{},"coverage.html":{}}}],["06",{"_index":685,"title":{},"body":{"classes/Exercise06Strategy.html":{},"classes/Exercise2023Helper.html":{},"interfaces/Game-1.html":{},"coverage.html":{}}}],["07",{"_index":719,"title":{},"body":{"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"interfaces/Hand.html":{},"coverage.html":{}}}],["1",{"_index":142,"title":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{},"interfaces/Game-1.html":{}},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2024Helper.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"overview.html":{}}}],["1/10",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":237,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{}}}],["12",{"_index":455,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["13",{"_index":453,"title":{},"body":{"classes/Exercise02Strategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{}}}],["14",{"_index":451,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{},"overview.html":{}}}],["18",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["19.2.0",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["19.2.1",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["1].split",{"_index":666,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["1er",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2024Helper.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"overview.html":{}}}],["2.8.1",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["2022",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["2023",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"classes/ExerciseHelper.html":{}}}],["2024",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"classes/ExerciseHelper.html":{}}}],["21",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["2nd",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":484,"title":{},"body":{"classes/Exercise02Strategy-1.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2024Helper.html":{},"interfaces/Hand.html":{}}}],["3/14",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":829,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["4/6",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":742,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{},"overview.html":{}}}],["5/8",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":844,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["6/8",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":772,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["7.8.2",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["7/16",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":843,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["9",{"_index":771,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["abaissée",{"_index":750,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["acceleration",{"_index":717,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["accumulator",{"_index":595,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["activés",{"_index":747,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["actual_component",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["advent",{"_index":997,"title":{},"body":{"index.html":{}}}],["almanac",{"_index":679,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["almanacs",{"_index":657,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["almanacs[almanacsindex].push",{"_index":677,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["almanacsindex",{"_index":675,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["angular/animations",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"injectables/FileService.html":{}}}],["angular/compiler",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FileService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["angular/material/form",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["année",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["appararaît",{"_index":342,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":956,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":166,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":178,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["après",{"_index":627,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["arejokeractivated",{"_index":736,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["arr",{"_index":543,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["ascii_backspace",{"_index":939,"title":{},"body":{"injectables/FileService.html":{}}}],["ascii_carriage_return",{"_index":940,"title":{},"body":{"injectables/FileService.html":{}}}],["async",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/FileService.html":{}}}],["attempt",{"_index":999,"title":{},"body":{"index.html":{}}}],["au",{"_index":557,"title":{},"body":{"classes/Exercise03Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["augmente",{"_index":308,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["aussi",{"_index":504,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["autour",{"_index":569,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["autre",{"_index":794,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["available",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["avec",{"_index":378,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"interfaces/Game.html":{}}}],["await",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/FileService.html":{}}}],["ayant",{"_index":410,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Hand.html":{}}}],["base_10",{"_index":233,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["battre",{"_index":703,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["besoin",{"_index":845,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["bet",{"_index":807,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["bettertimes",{"_index":716,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["blue",{"_index":450,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["boolean",{"_index":251,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Hand.html":{}}}],["bootstrap",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["browse",{"_index":1037,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["c'est",{"_index":754,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["cachées",{"_index":562,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["cachés",{"_index":555,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["calcule",{"_index":284,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["calculer",{"_index":396,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["camel",{"_index":882,"title":{},"body":{"classes/Exercise2023Helper.html":{}}}],["caractère",{"_index":559,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["cards",{"_index":773,"title":{},"body":{"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"interfaces/Hand.html":{}}}],["cards1",{"_index":745,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["cards2",{"_index":735,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["cart",{"_index":499,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["carte",{"_index":792,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["cartes",{"_index":743,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["catch",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/FileService.html":{}}}],["ceux",{"_index":415,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["chacun",{"_index":565,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["chacune",{"_index":741,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["chaque",{"_index":283,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["char",{"_index":541,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["chemin",{"_index":933,"title":{},"body":{"injectables/FileService.html":{}}}],["chiffre",{"_index":261,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy-1.html":{}}}],["chiffres",{"_index":282,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise04Strategy.html":{}}}],["cl",{"_index":766,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["class",{"_index":110,"title":{"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{}}}],["classements",{"_index":804,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["classes",{"_index":214,"title":{},"body":{"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["clés",{"_index":834,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["code",{"_index":998,"title":{},"body":{"index.html":{}}}],["codetechnical",{"_index":1008,"title":{},"body":{"index.html":{}}}],["colonne",{"_index":327,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{}}}],["color",{"_index":445,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["colorandvalue.split",{"_index":446,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["colorvalue",{"_index":457,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["colorés",{"_index":381,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["command",{"_index":1024,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["compare",{"_index":738,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["comparedefaulthands",{"_index":721,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["comparedefaulthands(cards1",{"_index":734,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["comparehands",{"_index":722,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["comparehands(hand1",{"_index":758,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["comparer",{"_index":764,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["comparisontable",{"_index":840,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["compatible",{"_index":377,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["compile",{"_index":414,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_template",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{}}}],["compos",{"_index":268,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise06Strategy.html":{}}}],["composent",{"_index":699,"title":{},"body":{"classes/Exercise06Strategy.html":{}}}],["composées",{"_index":740,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["composés",{"_index":279,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["compris",{"_index":483,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["computemultiplication",{"_index":573,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["computemultiplication(str",{"_index":581,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["computeweight",{"_index":303,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["computeweight(weightedvalues",{"_index":304,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["considérée",{"_index":505,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["console.log(this.getdoabletext(entirefile",{"_index":598,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["const",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["constructor",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise.html":{},"injectables/FileService.html":{}}}],["constructor(formbuilder",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(httpclient",{"_index":925,"title":{},"body":{"injectables/FileService.html":{}}}],["constructor(id",{"_index":218,"title":{},"body":{"classes/Exercise.html":{}}}],["constructor(private",{"_index":938,"title":{},"body":{"injectables/FileService.html":{}}}],["construit",{"_index":692,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["consécutif",{"_index":478,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["contenant",{"_index":317,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy.html":{}}}],["contenu",{"_index":262,"title":{},"body":{"classes/Exercise01Strategy.html":{},"injectables/FileService.html":{}}}],["contributors",{"_index":1033,"title":{},"body":{"index.html":{}}}],["conundrum",{"_index":869,"title":{},"body":{"classes/Exercise2023Helper.html":{}}}],["convertedseeds",{"_index":678,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["convertedseeds[i",{"_index":682,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["convertit",{"_index":399,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Hand.html":{}}}],["convertseedstolocation",{"_index":653,"title":{},"body":{"classes/Exercise05Strategy.html":{}}}],["convertseedstolocation(seeds",{"_index":656,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["correspondant",{"_index":420,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["correspondre",{"_index":418,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["couleur",{"_index":390,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["coverage",{"_index":948,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["croissant",{"_index":329,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{}}}],["croissante",{"_index":488,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["croissants",{"_index":497,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["cube",{"_index":868,"title":{},"body":{"classes/Exercise2023Helper.html":{}}}],["cubes",{"_index":380,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["current",{"_index":294,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["current.bet",{"_index":811,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["current.id",{"_index":432,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["currentcolor",{"_index":466,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["currentnumber",{"_index":548,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["currentvalue",{"_index":351,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{}}}],["d'entre",{"_index":566,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["d'optimiser",{"_index":846,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["d'un",{"_index":310,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"injectables/FileService.html":{}}}],["d'une",{"_index":388,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["dans",{"_index":270,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{}}}],["data",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/ExerciseStrategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["data.foreach((line",{"_index":633,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["data.length",{"_index":674,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["data.map",{"_index":632,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["data.map((line",{"_index":520,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["data.map((str",{"_index":590,"title":{},"body":{"classes/Exercise03Strategy-1.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["data.reduce((accumulator",{"_index":597,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["data[0].split",{"_index":665,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["day",{"_index":904,"title":{},"body":{"classes/Exercise2024Helper.html":{}}}],["de",{"_index":275,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["declarations",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["dedans",{"_index":263,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["default",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{}}}],["delta",{"_index":477,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["dependencies",{"_index":168,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dernier",{"_index":260,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["derniers",{"_index":281,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["des",{"_index":277,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["description",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"injectables/FileService.html":{}}}],["destination",{"_index":663,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["deuxième",{"_index":487,"title":{},"body":{"classes/Exercise02Strategy-1.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["différences",{"_index":331,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{}}}],["différentes",{"_index":744,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["dire",{"_index":836,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["directive",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["directives",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["disable",{"_index":1014,"title":{},"body":{"index.html":{}}}],["disponibles",{"_index":626,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["distance",{"_index":705,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["distances",{"_index":694,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["do\\(\\))(.*?)(?:don't\\(\\)|$)/g",{"_index":578,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["doable_text",{"_index":571,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["documentation",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["doincludenumberasstring",{"_index":250,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["donn",{"_index":382,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["données",{"_index":276,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["dont",{"_index":322,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["draw",{"_index":442,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["draw[color",{"_index":447,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["drawasstring",{"_index":404,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["drawasstring.split",{"_index":443,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["draws",{"_index":428,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["draws.split",{"_index":438,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["droite",{"_index":343,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["du",{"_index":269,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise07Strategy.html":{},"injectables/FileService.html":{},"interfaces/Hand.html":{}}}],["dynamic",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["d{1,3}/g",{"_index":605,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["décroissants",{"_index":498,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["détermin",{"_index":421,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["e",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/FileService.html":{}}}],["eight",{"_index":246,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["element",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["elfnumbers",{"_index":647,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["elfnumbers.foreach((n",{"_index":648,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["elfnumbersstr",{"_index":641,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["elle",{"_index":797,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["elles",{"_index":756,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["en",{"_index":255,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Hand.html":{}}}],["entirefile",{"_index":596,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["entourent",{"_index":564,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["entourés",{"_index":556,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["entre",{"_index":332,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{}}}],["error('méthode",{"_index":672,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["espaces",{"_index":697,"title":{},"body":{"classes/Exercise06Strategy.html":{}}}],["est",{"_index":312,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Hand.html":{}}}],["et",{"_index":259,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["eu",{"_index":411,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["eux",{"_index":567,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["example",{"_index":1006,"title":{},"body":{"index.html":{}}}],["exercice",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["exercise",{"_index":53,"title":{"classes/Exercise.html":{}},"body":{"components/AppComponent.html":{},"classes/Exercise.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"coverage.html":{}}}],["exercise('01",{"_index":865,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('02",{"_index":867,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('03",{"_index":870,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('04",{"_index":873,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('05",{"_index":875,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('06",{"_index":879,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('07",{"_index":881,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('08",{"_index":883,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('09",{"_index":884,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('10",{"_index":885,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('11",{"_index":886,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('12",{"_index":887,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('13",{"_index":888,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('14",{"_index":889,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('15",{"_index":890,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('16",{"_index":891,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('17",{"_index":892,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('18",{"_index":893,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('19",{"_index":894,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('20",{"_index":895,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('21",{"_index":896,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('22",{"_index":897,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('23",{"_index":898,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('24",{"_index":899,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise('25",{"_index":900,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["exercise.id",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["exercise.name",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["exercise01strategy",{"_index":227,"title":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{}},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"coverage.html":{}}}],["exercise02strategy",{"_index":364,"title":{"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{}},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"interfaces/Game.html":{},"coverage.html":{}}}],["exercise03strategy",{"_index":526,"title":{"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{}},"body":{"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"coverage.html":{}}}],["exercise04strategy",{"_index":610,"title":{"classes/Exercise04Strategy.html":{}},"body":{"classes/Exercise04Strategy.html":{},"classes/Exercise2023Helper.html":{},"coverage.html":{}}}],["exercise05strategy",{"_index":651,"title":{"classes/Exercise05Strategy.html":{}},"body":{"classes/Exercise05Strategy.html":{},"classes/Exercise2023Helper.html":{},"interfaces/Map.html":{},"coverage.html":{}}}],["exercise06strategy",{"_index":684,"title":{"classes/Exercise06Strategy.html":{}},"body":{"classes/Exercise06Strategy.html":{},"classes/Exercise2023Helper.html":{},"interfaces/Game-1.html":{},"coverage.html":{}}}],["exercise07strategy",{"_index":718,"title":{"classes/Exercise07Strategy.html":{}},"body":{"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"interfaces/Hand.html":{},"coverage.html":{}}}],["exercise2023helper",{"_index":860,"title":{"classes/Exercise2023Helper.html":{}},"body":{"classes/Exercise2023Helper.html":{},"classes/ExerciseHelper.html":{},"coverage.html":{}}}],["exercise2023helper.getall",{"_index":916,"title":{},"body":{"classes/ExerciseHelper.html":{}}}],["exercise2024helper",{"_index":901,"title":{"classes/Exercise2024Helper.html":{}},"body":{"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"coverage.html":{}}}],["exercise2024helper.getall",{"_index":917,"title":{},"body":{"classes/ExerciseHelper.html":{}}}],["exercisehelper",{"_index":105,"title":{"classes/ExerciseHelper.html":{}},"body":{"components/AppComponent.html":{},"classes/ExerciseHelper.html":{},"coverage.html":{}}}],["exercisehelper.getall(newyear",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["exercises",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["exercisestrategy",{"_index":219,"title":{"interfaces/ExerciseStrategy.html":{}},"body":{"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/ExerciseStrategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{}}}],["export",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["exports",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extrait",{"_index":256,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["fait",{"_index":264,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["false",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["faut",{"_index":568,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["fertilizer",{"_index":878,"title":{},"body":{"classes/Exercise2023Helper.html":{}}}],["fetch",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["fichier",{"_index":513,"title":{},"body":{"classes/Exercise02Strategy-1.html":{},"injectables/FileService.html":{}}}],["field",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{}}}],["filecontent",{"_index":943,"title":{},"body":{"injectables/FileService.html":{}}}],["filecontent.split(separator",{"_index":947,"title":{},"body":{"injectables/FileService.html":{}}}],["filepath",{"_index":932,"title":{},"body":{"injectables/FileService.html":{}}}],["fileservice",{"_index":41,"title":{"injectables/FileService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/FileService.html":{},"coverage.html":{},"overview.html":{}}}],["filter((color",{"_index":463,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["filter((game",{"_index":430,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["filter((key",{"_index":850,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["filter((line",{"_index":517,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["filter((map",{"_index":680,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["filter((n",{"_index":650,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["filter((str",{"_index":645,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["find",{"_index":1001,"title":{},"body":{"index.html":{}}}],["first",{"_index":296,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["firstnumber",{"_index":485,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["firstvaluefrom",{"_index":935,"title":{},"body":{"injectables/FileService.html":{}}}],["firstvaluefrom(this.httpclient.get(`assets/${filepath",{"_index":944,"title":{},"body":{"injectables/FileService.html":{}}}],["five",{"_index":243,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["flat",{"_index":592,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["fois",{"_index":339,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["foreach((key",{"_index":853,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["form",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["format",{"_index":402,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Hand.html":{}}}],["formatter",{"_index":774,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["formbuilder",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["formcontrol",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["formcontrol(null",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["formgroup",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["formsmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["four",{"_index":242,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["gales",{"_index":757,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["game",{"_index":372,"title":{"interfaces/Game.html":{},"interfaces/Game-1.html":{}},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise06Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"coverage.html":{}}}],["game.draws.every((draw",{"_index":459,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["game.draws.foreach((draw",{"_index":461,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["game_prefix_length",{"_index":434,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["gameasstring",{"_index":407,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["gameasstring.split",{"_index":437,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["gameidentifier",{"_index":436,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["games",{"_index":709,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["gauche",{"_index":337,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["gear",{"_index":871,"title":{},"body":{"classes/Exercise2023Helper.html":{}}}],["getadjacenttwonumbers",{"_index":528,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["getadjacenttwonumbers(data",{"_index":535,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["getall",{"_index":863,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{}}}],["getall(year",{"_index":912,"title":{},"body":{"classes/ExerciseHelper.html":{}}}],["getalmanacs",{"_index":654,"title":{},"body":{"classes/Exercise05Strategy.html":{}}}],["getalmanacs(data",{"_index":661,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["getdoabletext",{"_index":574,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["getdoabletext(str",{"_index":582,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["getfirstandlastfromstring",{"_index":235,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["getfirstandlastfromstring(str",{"_index":249,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["getmappedcards",{"_index":723,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["getmappedcards(cards",{"_index":765,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["getmultiplier",{"_index":575,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["getmultiplier(str",{"_index":584,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["getting",{"_index":995,"title":{"index.html":{}},"body":{"index.html":{}}}],["github",{"_index":1004,"title":{},"body":{"index.html":{}}}],["give",{"_index":876,"title":{},"body":{"classes/Exercise2023Helper.html":{}}}],["graph",{"_index":1038,"title":{},"body":{"modules.html":{}}}],["green",{"_index":452,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["génération",{"_index":628,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["hand",{"_index":759,"title":{"interfaces/Hand.html":{}},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{},"coverage.html":{}}}],["hand1",{"_index":762,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["hand2",{"_index":760,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["hands",{"_index":808,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["hands.length",{"_index":812,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["here",{"_index":1003,"title":{},"body":{"index.html":{}}}],["historian",{"_index":905,"title":{},"body":{"classes/Exercise2024Helper.html":{}}}],["html",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["httpclient",{"_index":926,"title":{},"body":{"injectables/FileService.html":{}}}],["httpclientmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/opsilonn/advent",{"_index":1007,"title":{},"body":{"index.html":{}}}],["hysteria",{"_index":906,"title":{},"body":{"classes/Exercise2024Helper.html":{}}}],["id",{"_index":216,"title":{},"body":{"classes/Exercise.html":{},"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["identifiants",{"_index":419,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["identifier",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["ignorant",{"_index":508,"title":{},"body":{"classes/Exercise02Strategy-1.html":{},"classes/Exercise06Strategy.html":{}}}],["il",{"_index":341,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["implémentée",{"_index":673,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["import",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["imports",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incrémenter",{"_index":324,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"miscellaneous/variables.html":{}}}],["indexi",{"_index":536,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["indexj",{"_index":537,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["indexnumberasstring",{"_index":300,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["injectable",{"_index":921,"title":{"injectables/FileService.html":{}},"body":{"injectables/FileService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":922,"title":{},"body":{"injectables/FileService.html":{}}}],["install",{"_index":1026,"title":{},"body":{"index.html":{}}}],["interface",{"_index":427,"title":{"interfaces/ExerciseStrategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/ExerciseStrategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{}}}],["interfaces",{"_index":918,"title":{},"body":{"interfaces/ExerciseStrategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"overview.html":{}}}],["invalide",{"_index":479,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["isdeltainvalid",{"_index":468,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["isdeltainvalid(firstnumber",{"_index":473,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["isdeltavalid",{"_index":469,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["isdeltavalid(firstnumber",{"_index":491,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["isdot",{"_index":529,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["isdot(char",{"_index":539,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["isdoublepair",{"_index":724,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["isdoublepair(mappedcards",{"_index":775,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["isexerciseresolved",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["isfiveofakind",{"_index":725,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["isfiveofakind(mappedcards",{"_index":778,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["isfourofakind",{"_index":726,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["isfourofakind(mappedcards",{"_index":780,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["isfullhouse",{"_index":727,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["isfullhouse(mappedcards",{"_index":782,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["isgamevalid",{"_index":366,"title":{},"body":{"classes/Exercise02Strategy.html":{}}}],["isgamevalid(game",{"_index":371,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["isincreasing",{"_index":475,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["isinrange",{"_index":530,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["isinrange(index",{"_index":542,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["islinevalid",{"_index":470,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["islinevalid(line",{"_index":494,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["islinevalidevenwithoneitemremoved",{"_index":471,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["islinevalidevenwithoneitemremoved(line",{"_index":502,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["isnumber",{"_index":531,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["isnumber(char",{"_index":545,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["isnumbersurrounded",{"_index":532,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["isnumbersurrounded(data",{"_index":547,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["issinglepair",{"_index":728,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["issinglepair(mappedcards",{"_index":784,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["isspecialchar",{"_index":533,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["isspecialchar(char",{"_index":550,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["isstar",{"_index":534,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["isstar(char",{"_index":552,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["isthreeofakind",{"_index":729,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["isthreeofakind(mappedcards",{"_index":786,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["item",{"_index":713,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["j",{"_index":733,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["jeu",{"_index":274,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["joker",{"_index":720,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["jokers",{"_index":746,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["json.parse(json.stringify(mappedcards",{"_index":857,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["k",{"_index":770,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["key",{"_index":851,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["keys",{"_index":830,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["keys.length",{"_index":838,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["keys.some((key",{"_index":839,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["keywithmostvalue",{"_index":848,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["kk997",{"_index":769,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["l'index",{"_index":309,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["l'initialise",{"_index":315,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["l'on",{"_index":506,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["l'optimise",{"_index":790,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["l'ordre",{"_index":328,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{}}}],["l'un",{"_index":509,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["l'écart",{"_index":480,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["l'état",{"_index":855,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["la",{"_index":271,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["last",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{}}}],["lastavailableyear",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["launch",{"_index":1028,"title":{},"body":{"index.html":{}}}],["le",{"_index":257,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{}}}],["leftvalue",{"_index":349,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["leftvars",{"_index":344,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["leftweight",{"_index":359,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["leftweightedvalues",{"_index":353,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["legend",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["length",{"_index":435,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"interfaces/Game.html":{}}}],["les",{"_index":319,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["leur",{"_index":749,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["leurs",{"_index":424,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Hand.html":{}}}],["ligne",{"_index":286,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise06Strategy.html":{}}}],["lignes",{"_index":500,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["line",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{}}}],["line.split",{"_index":642,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["line.split(':')[1",{"_index":639,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["line.split(this.separator).map((value",{"_index":521,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["line[0",{"_index":523,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["line[1",{"_index":522,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["lire",{"_index":931,"title":{},"body":{"injectables/FileService.html":{}}}],["list",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["liste",{"_index":409,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Hand.html":{}}}],["located",{"_index":1025,"title":{},"body":{"index.html":{}}}],["main",{"_index":763,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["mains",{"_index":739,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["map",{"_index":658,"title":{"interfaces/Map.html":{}},"body":{"classes/Exercise05Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{}}}],["map((colorandvalue",{"_index":444,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["map((draw",{"_index":439,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["map((game",{"_index":707,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["map((item",{"_index":714,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["map((line",{"_index":629,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["map((n",{"_index":667,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["map((str",{"_index":291,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"interfaces/Game.html":{}}}],["map.destination",{"_index":683,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["map.source",{"_index":681,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["mappedcards",{"_index":777,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["mappedcards1",{"_index":821,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["mappedcards2",{"_index":823,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["mappedcards[key",{"_index":828,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["mappedcards[this.joker",{"_index":847,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["matches",{"_index":603,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["matching",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["math.abs(rightvalue",{"_index":348,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["math.min(...this.convertseedstolocation(seeds",{"_index":670,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["matinputmodule",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["maxpercolor",{"_index":460,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["maxpercolor[color",{"_index":464,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["maxpercolor[currentcolor",{"_index":467,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["meilleure",{"_index":854,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{}}}],["minimale",{"_index":387,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["minimales",{"_index":426,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["minimaux",{"_index":391,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["minimum",{"_index":751,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["minimumcubepowerforgame",{"_index":367,"title":{},"body":{"classes/Exercise02Strategy.html":{}}}],["minimumcubepowerforgame(game",{"_index":384,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["miscellaneous",{"_index":1042,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":165,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":167,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modèle",{"_index":514,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["moins",{"_index":558,"title":{},"body":{"classes/Exercise03Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["morceau",{"_index":637,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["mostvalue",{"_index":849,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["mul\\(\\d{1,3},\\d{1,3}\\)/g",{"_index":579,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["mull",{"_index":909,"title":{},"body":{"classes/Exercise2024Helper.html":{}}}],["multiplication",{"_index":389,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise06Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{}}}],["multiplications",{"_index":563,"title":{},"body":{"classes/Exercise03Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["multiplie",{"_index":700,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["méthode",{"_index":289,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{},"interfaces/Map.html":{}}}],["n",{"_index":634,"title":{},"body":{"classes/Exercise04Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["n'est",{"_index":481,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{}}}],["new",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"coverage.html":{}}}],["newexercise",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["newexercise.strategy!.resolve(this.data",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["newexercise.strategy!.resolve2(this.data",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["newly",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["newnumber",{"_index":360,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["newvalue",{"_index":306,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["newyear",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["nine",{"_index":247,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["niveau",{"_index":333,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{}}}],["nombre",{"_index":265,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise04Strategy.html":{}}}],["nombres",{"_index":278,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise06Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{}}}],["non",{"_index":490,"title":{},"body":{"classes/Exercise02Strategy-1.html":{},"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["nosed",{"_index":907,"title":{},"body":{"classes/Exercise2024Helper.html":{}}}],["npm",{"_index":1027,"title":{},"body":{"index.html":{}}}],["null",{"_index":220,"title":{},"body":{"classes/Exercise.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{}}}],["number",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/ExerciseStrategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["number(key",{"_index":356,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["number_as_string",{"_index":234,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["numberarray.length",{"_index":570,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["numberasstring",{"_index":299,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["numberasstring.length",{"_index":298,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["numberleft",{"_index":606,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["numberofbettertimes",{"_index":686,"title":{},"body":{"classes/Exercise06Strategy.html":{}}}],["numberofbettertimes(game",{"_index":689,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["numberofwinningnumbers",{"_index":612,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["numberofwinningnumbers(line",{"_index":614,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["numberright",{"_index":608,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["numerickey",{"_index":355,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["o",{"_index":340,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["object.keys(draw",{"_index":462,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["object.keys(mappedcards",{"_index":831,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["object.keys(mappedcards).some((key",{"_index":827,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["object.keys(maxpercolor).reduce((sum",{"_index":465,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["object.keys(set_data).every((color",{"_index":456,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["objet",{"_index":403,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Hand.html":{}}}],["obtient",{"_index":507,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["one",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{}}}],["onexerciceselected",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["onexerciceselected(newexercise",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["onyearselected",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["onyearselected(newyear",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["open",{"_index":1023,"title":{},"body":{"index.html":{}}}],["optimise",{"_index":805,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["optimisecards",{"_index":730,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["optimisecards(mappedcards",{"_index":788,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["optimisedcards",{"_index":856,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["optimisedcards[keywithmostvalue",{"_index":859,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["optimisedcards[this.joker",{"_index":858,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["optimiser",{"_index":798,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["optimisée",{"_index":799,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["optimisées",{"_index":806,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["optional",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{}}}],["ordonn",{"_index":334,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{}}}],["ordonne",{"_index":326,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{}}}],["ou",{"_index":489,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["oui",{"_index":748,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["out",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ouvrir",{"_index":934,"title":{},"body":{"injectables/FileService.html":{}}}],["over",{"_index":910,"title":{},"body":{"classes/Exercise2024Helper.html":{}}}],["overview",{"_index":1039,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":982,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paire",{"_index":832,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["par",{"_index":338,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["param",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{}}}],["paris",{"_index":802,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["parseint(bet",{"_index":814,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["parseint(gameidentifier.substring(game_prefix_length",{"_index":441,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["parseint(item",{"_index":715,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["parseint(matches[0",{"_index":607,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["parseint(matches[1",{"_index":609,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["parseint(n",{"_index":668,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["parseint(newvalue",{"_index":361,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["parseint(str",{"_index":646,"title":{},"body":{"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["parseint(value",{"_index":448,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"interfaces/Game.html":{}}}],["participated",{"_index":1034,"title":{},"body":{"index.html":{}}}],["partie",{"_index":376,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{}}}],["parties",{"_index":423,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise06Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{}}}],["pas",{"_index":482,"title":{},"body":{"classes/Exercise02Strategy-1.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["passer",{"_index":393,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["permet",{"_index":930,"title":{},"body":{"injectables/FileService.html":{}}}],["permettant",{"_index":702,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["peuvent",{"_index":417,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["phrase",{"_index":254,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["plugin",{"_index":1018,"title":{},"body":{"index.html":{}}}],["plus",{"_index":753,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["plusieurs",{"_index":412,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise06Strategy.html":{},"interfaces/Game.html":{}}}],["poid",{"_index":325,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["poids",{"_index":336,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["possibilités",{"_index":701,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["pour",{"_index":392,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise04Strategy.html":{},"interfaces/Game.html":{}}}],["premier",{"_index":258,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise02Strategy-1.html":{}}}],["premiers",{"_index":280,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["première",{"_index":752,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["prends",{"_index":253,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["private",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["procéduralement",{"_index":625,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["project",{"_index":1002,"title":{},"body":{"index.html":{}}}],["promise",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/FileService.html":{}}}],["properties",{"_index":21,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"properties.html":{}}}],["provideanimations",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":937,"title":{},"body":{"injectables/FileService.html":{}}}],["providerouter(routes",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["présent",{"_index":313,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["public",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["puissance",{"_index":386,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["puissances",{"_index":425,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["q",{"_index":841,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["quantit",{"_index":768,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["que",{"_index":795,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["questions",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["qui",{"_index":416,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Hand.html":{}}}],["rajoutés",{"_index":624,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["range",{"_index":664,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["rapport",{"_index":803,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["ratios",{"_index":872,"title":{},"body":{"classes/Exercise2023Helper.html":{}}}],["reactiveformsmodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":924,"title":{},"body":{"injectables/FileService.html":{}}}],["read(filepath",{"_index":928,"title":{},"body":{"injectables/FileService.html":{}}}],["readdraw",{"_index":368,"title":{},"body":{"classes/Exercise02Strategy.html":{}}}],["readdraw(drawasstring",{"_index":397,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["readfile",{"_index":472,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["readfile(data",{"_index":511,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["readgame",{"_index":369,"title":{},"body":{"classes/Exercise02Strategy.html":{}}}],["readgame(gameasstring",{"_index":405,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["readgames",{"_index":687,"title":{},"body":{"classes/Exercise06Strategy.html":{}}}],["readgames(data",{"_index":691,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["readgames2",{"_index":688,"title":{},"body":{"classes/Exercise06Strategy.html":{}}}],["readgames2(data",{"_index":695,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["readhands",{"_index":731,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["readhands(data",{"_index":800,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["readline",{"_index":613,"title":{},"body":{"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{}}}],["readline(line",{"_index":616,"title":{},"body":{"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{}}}],["readonly",{"_index":232,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["readregex",{"_index":576,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["readregex(str",{"_index":585,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["recommanded",{"_index":1010,"title":{},"body":{"index.html":{}}}],["record",{"_index":305,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["red",{"_index":454,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise2024Helper.html":{},"interfaces/Game.html":{}}}],["reduce((accumulator",{"_index":594,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["reduce((sum",{"_index":293,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise04Strategy.html":{},"interfaces/Game.html":{}}}],["reduce((total",{"_index":350,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["regex",{"_index":586,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["regex_multiplier",{"_index":572,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["regexp",{"_index":577,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["reports",{"_index":908,"title":{},"body":{"classes/Exercise2024Helper.html":{}}}],["repository",{"_index":1005,"title":{},"body":{"index.html":{}}}],["représentée",{"_index":793,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["reset",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/ExerciseStrategy.html":{}}}],["resolve(data",{"_index":272,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/ExerciseStrategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["resolve2",{"_index":236,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/ExerciseStrategy.html":{}}}],["resolve2(data",{"_index":287,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/ExerciseStrategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["resolving",{"_index":1000,"title":{},"body":{"index.html":{}}}],["responsetype",{"_index":945,"title":{},"body":{"injectables/FileService.html":{}}}],["result",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["result2",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["results",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retourne",{"_index":330,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Hand.html":{}}}],["return",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["returns",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["revient",{"_index":835,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["rightvalue",{"_index":346,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["rightvars",{"_index":345,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["rightvars[i",{"_index":347,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["rightweight",{"_index":357,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["rightweightedvalues",{"_index":354,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["rightweightedvalues[numerickey",{"_index":358,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/FileService.html":{}}}],["round",{"_index":400,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{},"index.html":{}}}],["rounds",{"_index":395,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["routermodule",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["routes",{"_index":211,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["run",{"_index":1030,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":936,"title":{},"body":{"injectables/FileService.html":{},"dependencies.html":{}}}],["récupère",{"_index":791,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["s'il",{"_index":311,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["sa",{"_index":767,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["scratchcards",{"_index":874,"title":{},"body":{"classes/Exercise2023Helper.html":{}}}],["seconde",{"_index":755,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["secondnumber",{"_index":474,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["see",{"_index":1032,"title":{},"body":{"index.html":{}}}],["seed",{"_index":877,"title":{},"body":{"classes/Exercise2023Helper.html":{}}}],["seeds",{"_index":660,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["selected",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["selectedyear",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["separator",{"_index":302,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy-1.html":{},"injectables/FileService.html":{}}}],["server",{"_index":1029,"title":{},"body":{"index.html":{}}}],["ses",{"_index":510,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["set",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["set_data",{"_index":449,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["set_data[color",{"_index":458,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["setlastavailableyear",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["sets",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["setup",{"_index":1011,"title":{},"body":{"index.html":{}}}],["seven",{"_index":245,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["si",{"_index":375,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Hand.html":{}}}],["sinon",{"_index":314,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["six",{"_index":244,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["sizes",{"_index":631,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["somme",{"_index":285,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Hand.html":{}}}],["sont",{"_index":496,"title":{},"body":{"classes/Exercise02Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["sort((hand1",{"_index":809,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["sous",{"_index":401,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"interfaces/Game.html":{}}}],["split",{"_index":644,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["spécial",{"_index":560,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["src/.../app.config.ts",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:45",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:54",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:81",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":954,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.module",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.module.ts",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/helpers/2023/exercise",{"_index":228,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{}}}],["src/app/helpers/2023/exercise2023helper",{"_index":914,"title":{},"body":{"classes/ExerciseHelper.html":{}}}],["src/app/helpers/2023/exercise2023helper.ts",{"_index":861,"title":{},"body":{"classes/Exercise2023Helper.html":{},"coverage.html":{}}}],["src/app/helpers/2023/exercise2023helper.ts:12",{"_index":864,"title":{},"body":{"classes/Exercise2023Helper.html":{}}}],["src/app/helpers/2024/exercise",{"_index":301,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise2024Helper.html":{},"coverage.html":{}}}],["src/app/helpers/2024/exercise2024helper",{"_index":915,"title":{},"body":{"classes/ExerciseHelper.html":{}}}],["src/app/helpers/2024/exercise2024helper.ts",{"_index":902,"title":{},"body":{"classes/Exercise2024Helper.html":{},"coverage.html":{}}}],["src/app/helpers/2024/exercise2024helper.ts:8",{"_index":903,"title":{},"body":{"classes/Exercise2024Helper.html":{}}}],["src/app/helpers/exercisehelper",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/helpers/exercisehelper.ts",{"_index":911,"title":{},"body":{"classes/ExerciseHelper.html":{},"coverage.html":{}}}],["src/app/helpers/exercisehelper.ts:7",{"_index":913,"title":{},"body":{"classes/ExerciseHelper.html":{}}}],["src/app/models/exercise",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{}}}],["src/app/models/exercise.ts",{"_index":215,"title":{},"body":{"classes/Exercise.html":{},"coverage.html":{}}}],["src/app/models/exercise.ts:5",{"_index":222,"title":{},"body":{"classes/Exercise.html":{}}}],["src/app/models/exercise.ts:6",{"_index":223,"title":{},"body":{"classes/Exercise.html":{}}}],["src/app/models/exercise.ts:7",{"_index":221,"title":{},"body":{"classes/Exercise.html":{}}}],["src/app/services/file.service",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["src/app/services/file.service.ts",{"_index":923,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["src/app/services/file.service.ts:18",{"_index":929,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:8",{"_index":927,"title":{},"body":{"injectables/FileService.html":{}}}],["standalone",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["startauthors",{"_index":1031,"title":{},"body":{"index.html":{}}}],["started",{"_index":996,"title":{"index.html":{}},"body":{"index.html":{}}}],["statement",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["statements",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":862,"title":{},"body":{"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"classes/ExerciseHelper.html":{}}}],["str",{"_index":266,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{}}}],["str.match(regex",{"_index":604,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["str.split",{"_index":813,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["str.substring(i",{"_index":297,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["strategies/exercise",{"_index":229,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{}}}],["strategy",{"_index":217,"title":{},"body":{"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/Exercise2023Helper.html":{},"classes/Exercise2024Helper.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["strategy.ts",{"_index":231,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/ExerciseStrategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{}}}],["strategy.ts:10",{"_index":370,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{}}}],["strategy.ts:104",{"_index":546,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["strategy.ts:106",{"_index":492,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["strategy.ts:108",{"_index":540,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["strategy.ts:11",{"_index":655,"title":{},"body":{"classes/Exercise05Strategy.html":{}}}],["strategy.ts:112",{"_index":551,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["strategy.ts:114",{"_index":779,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["strategy.ts:116",{"_index":553,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["strategy.ts:118",{"_index":781,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["strategy.ts:12",{"_index":554,"title":{},"body":{"classes/Exercise03Strategy.html":{},"classes/Exercise04Strategy.html":{}}}],["strategy.ts:120",{"_index":544,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["strategy.ts:122",{"_index":783,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["strategy.ts:126",{"_index":787,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["strategy.ts:13",{"_index":273,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{}}}],["strategy.ts:130",{"_index":776,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["strategy.ts:137",{"_index":785,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["strategy.ts:14",{"_index":588,"title":{},"body":{"classes/Exercise03Strategy-1.html":{},"classes/Exercise05Strategy.html":{}}}],["strategy.ts:148",{"_index":737,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["strategy.ts:15",{"_index":515,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["strategy.ts:17",{"_index":408,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{}}}],["strategy.ts:170",{"_index":789,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["strategy.ts:2",{"_index":919,"title":{},"body":{"interfaces/ExerciseStrategy.html":{}}}],["strategy.ts:20",{"_index":288,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["strategy.ts:21",{"_index":589,"title":{},"body":{"classes/Exercise03Strategy-1.html":{},"classes/Exercise05Strategy.html":{}}}],["strategy.ts:23",{"_index":621,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["strategy.ts:25",{"_index":704,"title":{},"body":{"classes/Exercise06Strategy.html":{}}}],["strategy.ts:26",{"_index":662,"title":{},"body":{"classes/Exercise05Strategy.html":{}}}],["strategy.ts:29",{"_index":422,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{}}}],["strategy.ts:3",{"_index":920,"title":{},"body":{"interfaces/ExerciseStrategy.html":{}}}],["strategy.ts:31",{"_index":252,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise07Strategy.html":{}}}],["strategy.ts:34",{"_index":583,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["strategy.ts:36",{"_index":512,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["strategy.ts:37",{"_index":617,"title":{},"body":{"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{}}}],["strategy.ts:38",{"_index":587,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["strategy.ts:39",{"_index":335,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["strategy.ts:40",{"_index":406,"title":{},"body":{"classes/Exercise02Strategy.html":{}}}],["strategy.ts:43",{"_index":561,"title":{},"body":{"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{}}}],["strategy.ts:45",{"_index":801,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["strategy.ts:49",{"_index":659,"title":{},"body":{"classes/Exercise05Strategy.html":{}}}],["strategy.ts:5",{"_index":238,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{}}}],["strategy.ts:54",{"_index":495,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["strategy.ts:55",{"_index":696,"title":{},"body":{"classes/Exercise06Strategy.html":{}}}],["strategy.ts:56",{"_index":398,"title":{},"body":{"classes/Exercise02Strategy.html":{}}}],["strategy.ts:58",{"_index":549,"title":{},"body":{"classes/Exercise03Strategy.html":{},"classes/Exercise07Strategy.html":{}}}],["strategy.ts:6",{"_index":248,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{}}}],["strategy.ts:63",{"_index":307,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["strategy.ts:64",{"_index":615,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["strategy.ts:7",{"_index":580,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["strategy.ts:71",{"_index":373,"title":{},"body":{"classes/Exercise02Strategy.html":{}}}],["strategy.ts:72",{"_index":538,"title":{},"body":{"classes/Exercise03Strategy.html":{}}}],["strategy.ts:73",{"_index":698,"title":{},"body":{"classes/Exercise06Strategy.html":{}}}],["strategy.ts:74",{"_index":503,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["strategy.ts:79",{"_index":761,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["strategy.ts:81",{"_index":690,"title":{},"body":{"classes/Exercise06Strategy.html":{}}}],["strategy.ts:9",{"_index":732,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["strategy.ts:90",{"_index":385,"title":{},"body":{"classes/Exercise02Strategy.html":{}}}],["strategy.ts:94",{"_index":476,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["string",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["string.fromcharcode(ascii_backspace",{"_index":942,"title":{},"body":{"injectables/FileService.html":{}}}],["string.fromcharcode(ascii_carriage_return",{"_index":941,"title":{},"body":{"injectables/FileService.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["suite",{"_index":486,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["sum",{"_index":295,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise04Strategy.html":{},"interfaces/Game.html":{}}}],["support",{"_index":1035,"title":{},"body":{"modules.html":{}}}],["supprime",{"_index":636,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["svg",{"_index":1036,"title":{},"body":{"modules.html":{}}}],["sélectionner",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["t",{"_index":842,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["table",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["tech",{"_index":1019,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["temporaire",{"_index":290,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{},"interfaces/Map.html":{}}}],["temps",{"_index":693,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["text",{"_index":946,"title":{},"body":{"injectables/FileService.html":{}}}],["this.base_10",{"_index":362,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{}}}],["this.comparehands(hand1",{"_index":810,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["this.computemultiplication(str",{"_index":593,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["this.data",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["this.data.length",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["this.doable_text",{"_index":602,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["this.exercises",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["this.fileservice.read(`${selectedyear}/data/${newexercise.id}.txt",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["this.fileservice.read(`${selectedyear}/statements/${newexercise.id}.txt",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["this.form.get('exercise')!.valuechanges.subscribe(async",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["this.form.get('year')!.valuechanges.subscribe(async",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["this.form.get('year')?.setvalue(lastavailableyear",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["this.form.get('year')?.value",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["this.formbuilder.group",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getalmanacs(data",{"_index":669,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["this.getdoabletext(entirefile",{"_index":599,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["this.getfirstandlastfromstring(str",{"_index":292,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["this.getmappedcards(hand1.cards",{"_index":822,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["this.getmappedcards(hand2.cards",{"_index":824,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["this.getmultiplier(str",{"_index":591,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["this.id",{"_index":224,"title":{},"body":{"classes/Exercise.html":{}}}],["this.isdeltavalid(firstnumber",{"_index":525,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["this.isdoublepair(mappedcards",{"_index":819,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["this.isexerciseresolved",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isfiveofakind(mappedcards",{"_index":815,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["this.isfourofakind(mappedcards",{"_index":816,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["this.isfullhouse(mappedcards",{"_index":817,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["this.isgamevalid(game",{"_index":431,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["this.islinevalid(currentline",{"_index":524,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["this.islinevalid(line",{"_index":518,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["this.islinevalidevenwithoneitemremoved(line",{"_index":519,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["this.issinglepair(mappedcards",{"_index":820,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["this.isthreeofakind(mappedcards",{"_index":818,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["this.joker",{"_index":852,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["this.minimumcubepowerforgame(game",{"_index":433,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["this.name",{"_index":225,"title":{},"body":{"classes/Exercise.html":{}}}],["this.numberofbettertimes(game",{"_index":708,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["this.numberofwinningnumbers(line",{"_index":635,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["this.onexerciceselected(newexercise",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["this.onyearselected(newyear",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["this.optimisecards(mappedcards1",{"_index":825,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["this.optimisecards(mappedcards2",{"_index":826,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["this.readdraw(draw",{"_index":440,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["this.readfile(data",{"_index":516,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["this.readgame(str",{"_index":429,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["this.readline(data[0",{"_index":711,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["this.readline(data[1",{"_index":712,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["this.readline(line",{"_index":630,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["this.readregex(str",{"_index":600,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["this.regex_multiplier",{"_index":601,"title":{},"body":{"classes/Exercise03Strategy-1.html":{}}}],["this.result",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["this.result2",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setlastavailableyear",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statement",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statement.length",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["this.strategy",{"_index":226,"title":{},"body":{"classes/Exercise.html":{}}}],["this.years[this.years.length",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["three",{"_index":241,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["throw",{"_index":671,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["ticket",{"_index":622,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["tickets",{"_index":623,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["time",{"_index":706,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["times",{"_index":710,"title":{},"body":{"classes/Exercise06Strategy.html":{},"interfaces/Game-1.html":{}}}],["tirage",{"_index":379,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise04Strategy.html":{},"interfaces/Game.html":{}}}],["tirages",{"_index":413,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["tirés",{"_index":619,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["total",{"_index":352,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["tous",{"_index":394,"title":{},"body":{"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{}}}],["toutes",{"_index":318,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["track",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["traiter",{"_index":267,"title":{},"body":{"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["traîne",{"_index":837,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["trebuchet",{"_index":866,"title":{},"body":{"classes/Exercise2023Helper.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["tries",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["try",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/FileService.html":{}}}],["tslib",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":240,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["type",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"classes/ExerciseHelper.html":{},"interfaces/ExerciseStrategy.html":{},"injectables/FileService.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{},"interfaces/Map.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1016,"title":{},"body":{"index.html":{}}}],["un",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Game-1.html":{},"interfaces/Hand.html":{}}}],["une",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"interfaces/Hand.html":{}}}],["unknown",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"injectables/FileService.html":{}}}],["up",{"_index":1009,"title":{},"body":{"index.html":{}}}],["update",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["used",{"_index":1020,"title":{},"body":{"index.html":{}}}],["v^4.4.5",{"_index":1022,"title":{},"body":{"index.html":{}}}],["vainqueurs",{"_index":618,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["valeur",{"_index":321,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["valeurs",{"_index":320,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{}}}],["valide",{"_index":493,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["valides",{"_index":501,"title":{},"body":{"classes/Exercise02Strategy-1.html":{}}}],["value",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"classes/Exercise02Strategy-1.html":{},"classes/Exercise03Strategy.html":{},"classes/Exercise03Strategy-1.html":{},"classes/Exercise04Strategy.html":{},"classes/Exercise05Strategy.html":{},"classes/Exercise06Strategy.html":{},"classes/Exercise07Strategy.html":{},"interfaces/Game.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy-1.html":{},"classes/Exercise03Strategy-1.html":{}}}],["variable",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1043,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vers",{"_index":796,"title":{},"body":{"classes/Exercise07Strategy.html":{}}}],["version",{"_index":1040,"title":{},"body":{"properties.html":{}}}],["vetur",{"_index":1015,"title":{},"body":{"index.html":{}}}],["veuillez",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["veut",{"_index":323,"title":{},"body":{"classes/Exercise01Strategy-1.html":{},"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["vite",{"_index":1021,"title":{},"body":{"index.html":{}}}],["void",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/Exercise01Strategy-1.html":{}}}],["volar",{"_index":1013,"title":{},"body":{"index.html":{}}}],["votre",{"_index":620,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["vs",{"_index":1012,"title":{},"body":{"index.html":{}}}],["vue",{"_index":1017,"title":{},"body":{"index.html":{}}}],["vérifie",{"_index":374,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["vérifier",{"_index":383,"title":{},"body":{"classes/Exercise02Strategy.html":{},"interfaces/Game.html":{}}}],["wait",{"_index":880,"title":{},"body":{"classes/Exercise2023Helper.html":{}}}],["weightedvalues",{"_index":316,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["weightedvalues[newnumber",{"_index":363,"title":{},"body":{"classes/Exercise01Strategy-1.html":{}}}],["while(index",{"_index":676,"title":{},"body":{"classes/Exercise05Strategy.html":{},"interfaces/Map.html":{}}}],["winningnumbers",{"_index":643,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["winningnumbers.includes(n",{"_index":649,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["winningnumbersstr",{"_index":640,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["xyz",{"_index":638,"title":{},"body":{"classes/Exercise04Strategy.html":{}}}],["y",{"_index":833,"title":{},"body":{"classes/Exercise07Strategy.html":{},"interfaces/Hand.html":{}}}],["year",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"classes/ExerciseHelper.html":{}}}],["years",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["zero",{"_index":239,"title":{},"body":{"classes/Exercise01Strategy.html":{}}}],["zone.js",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                exercises\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                isExerciseResolved\n                            \n                            \n                                    Public\n                                result\n                            \n                            \n                                    Public\n                                result2\n                            \n                            \n                                    Public\n                                statement\n                            \n                            \n                                    Public\n                                years\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                onExerciceSelected\n                            \n                            \n                                    Private\n                                    Async\n                                onYearSelected\n                            \n                            \n                                    Private\n                                setLastAvailableYear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        onExerciceSelected\n                        \n                    \n                \n            \n            \n                \n                        \n                    onExerciceSelected(newExercise: Exercise)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:54\n                        \n                    \n\n\n            \n                \n                        When an exercise is selected, then fetch its data, and if any are found, tries to resolve its 2 questions\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newExercise\n                                            \n                                                            Exercise\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Newly selected exercise\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        onYearSelected\n                        \n                    \n                \n            \n            \n                \n                        \n                    onYearSelected(newYear: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:45\n                        \n                    \n\n\n            \n                \n                        When a new year is selected, we update its list of available exercises\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newYear\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    newly selected year\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLastAvailableYear\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLastAvailableYear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Sets the year as the last available one\nIE : if the years 2021, 2022, and 2024 are set, then 2024 is selected)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        exercises\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Exercise[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formBuilder.group({\n    exercise: new FormControl(null),\n    year: new FormControl(null)\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isExerciseResolved\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        result2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        years\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['2023', '2024']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Exercise } from 'src/app/models/exercise';\nimport { ExerciseHelper } from 'src/app/helpers/ExerciseHelper';\nimport { FileService } from 'src/app/services/file.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  standalone: false\n})\nexport class AppComponent implements OnInit {\n\n  public data: string[] = [];\n  public exercises: Exercise[] = [];\n  public form: FormGroup = this.formBuilder.group({\n    exercise: new FormControl(null),\n    year: new FormControl(null)\n  });\n  public isExerciseResolved = false;\n  public result = 0;\n  public result2 = 0;\n  public statement: string[] = [];\n  public years: string[] = ['2023', '2024'];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private fileService: FileService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form.get('year')!.valueChanges.subscribe(async (newYear: string) => this.onYearSelected(newYear));\n\n    this.form.get('exercise')!.valueChanges.subscribe(async (newExercise: Exercise) => this.onExerciceSelected(newExercise));\n\n    this.setLastAvailableYear();\n  }\n\n  /**\n   * When a new year is selected, we update its list of available exercises\n   * @param newYear newly selected year\n   */\n  private async onYearSelected(newYear: string): Promise {\n    this.exercises = ExerciseHelper.getAll(newYear);\n  }\n\n  /**\n   * When an exercise is selected, then fetch its data, and if any are found, tries to resolve its 2 questions\n   * @param newExercise Newly selected exercise\n   * @returns \n   */\n  private async onExerciceSelected(newExercise: Exercise): Promise {\n    var selectedYear: string = this.form.get('year')?.value;\n    this.statement = await this.fileService.read(`${selectedYear}/statements/${newExercise.id}.txt`);\n    this.data = await this.fileService.read(`${selectedYear}/data/${newExercise.id}.txt`);\n\n    if (this.statement.length === 0 || this.data.length === 0) {\n      return;\n    }\n\n    try {\n      this.result = newExercise.strategy!.resolve(this.data);\n    } catch (e: unknown) {\n      this.result = 0;\n    }\n    try {\n      this.result2 = newExercise.strategy!.resolve2(this.data);\n    } catch (e: unknown) {\n      this.result2 = 0;\n    }\n\n    this.isExerciseResolved = true;\n  }\n\n  /**\n   * Sets the year as the last available one\n   * IE : if the years 2021, 2022, and 2024 are set, then 2024 is selected)\n   */\n  private setLastAvailableYear(): void {\n    var lastAvailableYear: string = this.years[this.years.length - 1];\n    this.form.get('year')?.setValue(lastAvailableYear);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      \n        Veuillez sélectionner une année\n        \n          @for (year of years; track year) {\n          {{ year }}\n          }\n        \n      \n\n      \n  \n      \n      \n        Veuillez sélectionner un exercice\n        \n          @for (exercise of exercises; track exercise) {\n          {{ exercise.id }} - {{ exercise.name }}\n          }\n        \n      \n    \n  \n\n  \n    \n    \n      \n        \n          {{ line }}\n        \n      \n    \n\n    \n    \n      \n         1er exercice : {{ result }}\n         2nd exercice : {{ result2 }}\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Veuillez sélectionner une année                  @for (year of years; track year) {          {{ year }}          }                                          Veuillez sélectionner un exercice                  @for (exercise of exercises; track exercise) {          {{ exercise.id }} - {{ exercise.name }}          }                                                      {{ line }}                                         1er exercice : {{ result }}         2nd exercice : {{ result2 }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nRouterOutlet\n\nRouterOutlet\n\nAppModule -->\n\nRouterOutlet->AppModule\n\n\n\n\n\nFileService\n\nFileService\n\nAppModule -->\n\nFileService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            RouterOutlet\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { RouterOutlet } from '@angular/router';\nimport { AppComponent } from 'src/app/app.component';\nimport { AppRoutingModule } from 'src/app/app.routing.module';\nimport { FileService } from 'src/app/services/file.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatInputModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    RouterOutlet,\n  ],\n  providers: [\n    FileService,\n    provideAnimations(),\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exercise.html":{"url":"classes/Exercise.html","title":"class - Exercise","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exercise\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/exercise.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                strategy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, name: string, strategy: ExerciseStrategy | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/exercise.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        strategy\n                                                  \n                                                        \n                                                                        ExerciseStrategy | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/exercise.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/exercise.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strategy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExerciseStrategy | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/exercise.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\nexport class Exercise {\n\n    id: string;\n    name: string;\n    strategy: ExerciseStrategy | null;\n\n    constructor(\n        id: string,\n        name: string,\n        strategy: ExerciseStrategy | null\n    ) {\n        this.id = id;\n        this.name = name;\n        this.strategy = strategy;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exercise01Strategy.html":{"url":"classes/Exercise01Strategy.html","title":"class - Exercise01Strategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exercise01Strategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2023/exercise-strategies/exercise-01-strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ExerciseStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                BASE_10\n                            \n                            \n                                    Private\n                                    Readonly\n                                NUMBER_AS_STRING\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getFirstAndLastFromString\n                            \n                            \n                                    Public\n                                resolve\n                            \n                            \n                                    Public\n                                resolve2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BASE_10\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2023/exercise-strategies/exercise-01-strategy.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        NUMBER_AS_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2023/exercise-strategies/exercise-01-strategy.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getFirstAndLastFromString\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFirstAndLastFromString(str: string, doIncludeNumberAsString: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-01-strategy.ts:31\n                        \n                    \n\n\n            \n                \n                        Prends une phrase, en extrait le premier et dernier chiffre contenu dedans, et en fait un nombre\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Phrase à traiter\n\n                                            \n                                        \n                                        \n                                                doIncludeNumberAsString\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Un nombre composé du premier et dernier chiffre contenu dans la phrase\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-01-strategy.ts:13\n                        \n                    \n\n\n            \n                \n                        Prends un jeu de données, fait des nombres composés des premiers et derniers chiffres contenu de chaque phrase, et en calcule la somme\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                La somme des nombres composés des premiers et derniers chiffres de chaque ligne\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve2\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve2(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-01-strategy.ts:20\n                        \n                    \n\n\n            \n                \n                        Méthode temporaire\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\nexport class Exercise01Strategy implements ExerciseStrategy {\n\n    private readonly BASE_10 = 10;\n    private readonly NUMBER_AS_STRING = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\n    /**\n     * Prends un jeu de données, fait des nombres composés des premiers et derniers chiffres contenu de chaque phrase, et en calcule la somme\n     * @param data Jeu de données à traiter\n     * @returns La somme des nombres composés des premiers et derniers chiffres de chaque ligne\n     */\n    public resolve(data: string[]): number {\n        return data\n            .map((str: string) => this.getFirstAndLastFromString(str, false))\n            .reduce((sum: number, current: number) => sum + current, 0);\n    }\n\n    /** Méthode temporaire */\n    public resolve2(data: string[]): number {\n        return data\n            .map((str: string) => this.getFirstAndLastFromString(str, true))\n            .reduce((sum: number, current: number) => sum + current, 0);\n    }\n\n    /**\n     * Prends une phrase, en extrait le premier et dernier chiffre contenu dedans, et en fait un nombre\n     * @param str Phrase à traiter\n     * @returns Un nombre composé du premier et dernier chiffre contenu dans la phrase\n     */\n    private getFirstAndLastFromString(str: string, doIncludeNumberAsString: boolean): number {\n        let first = -1;\n        let last = -1;\n\n        for (let i = 0; i  str.substring(i, i + numberAsString.length) === numberAsString);\n                if (indexNumberAsString !== -1) {\n                    if (first === -1) {\n                        first = indexNumberAsString;\n                    }\n                    last = indexNumberAsString;\n                }\n            }\n        }\n\n        return first * 10 + last;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exercise01Strategy-1.html":{"url":"classes/Exercise01Strategy-1.html","title":"class - Exercise01Strategy-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exercise01Strategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2024/exercise-strategies/exercise-01-strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ExerciseStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                BASE_10\n                            \n                            \n                                    Private\n                                    Readonly\n                                SEPARATOR\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                computeWeight\n                            \n                            \n                                    Public\n                                resolve\n                            \n                            \n                                    Public\n                                resolve2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BASE_10\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2024/exercise-strategies/exercise-01-strategy.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '   '\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2024/exercise-strategies/exercise-01-strategy.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        computeWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    computeWeight(weightedValues: Record, newValue: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-01-strategy.ts:63\n                        \n                    \n\n\n            \n                \n                        Augmente l'index d'un chiffre s'il est présent, sinon l'initialise à 1\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                weightedValues\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Record contenant toutes les valeurs\n\n                                            \n                                        \n                                        \n                                                newValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    valeur dont on veut incrémenter le poid\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-01-strategy.ts:13\n                        \n                    \n\n\n            \n                \n                        Prends un jeu de données, ordonne chaque colonne dans l'ordre croissant, et retourne la somme des différences entre les valeurs de chaque niveau\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                La somme des différences entre les valeurs de chaque niveau, ordonné dans l'ordre croissant\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve2\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve2(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-01-strategy.ts:39\n                        \n                    \n\n\n            \n                \n                        Prends un jeu de données, et retourne la somme des poids de chaque chiffre de gauche par le nombre de fois où il appararaît dans la colonne de droite\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                La somme des poids de chaque chiffre de gauche par le nombre de fois où il appararaît dans la colonne de droite\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\nexport class Exercise01Strategy implements ExerciseStrategy {\n\n    private readonly BASE_10 = 10;\n    private readonly SEPARATOR = '   ';\n\n    /**\n     * Prends un jeu de données, ordonne chaque colonne dans l'ordre croissant, et retourne la somme des différences entre les valeurs de chaque niveau\n     * @param data Jeu de données à traiter\n     * @returns La somme des différences entre les valeurs de chaque niveau, ordonné dans l'ordre croissant\n     */\n    public resolve(data: string[]): number {\n        var leftVars: number[] = [];\n        var rightVars: number[] = [];\n\n        for (let i = 0; i  {\n                var rightValue: number = rightVars[i];\n                return Math.abs(rightValue - leftValue);\n            })\n            .reduce((total: number, currentValue: number) => total + currentValue, 0);\n    }\n\n    /**\n     * Prends un jeu de données, et retourne la somme des poids de chaque chiffre de gauche par le nombre de fois où il appararaît dans la colonne de droite\n     * @param data Jeu de données à traiter\n     * @returns La somme des poids de chaque chiffre de gauche par le nombre de fois où il appararaît dans la colonne de droite\n     */\n    public resolve2(data: string[]): number {\n        var leftWeightedValues: Record = {};\n        var rightWeightedValues: Record = {};\n\n        for (let i = 0; i  {\n                const numericKey = Number(key);\n                const rightWeight = rightWeightedValues[numericKey] || 0;\n                return numericKey * leftWeight * rightWeight;\n            })            \n            .reduce((total: number, currentValue: number) => total + currentValue, 0);\n    }\n\n    /**\n     * Augmente l'index d'un chiffre s'il est présent, sinon l'initialise à 1\n     * @param weightedValues Record contenant toutes les valeurs\n     * @param newValue valeur dont on veut incrémenter le poid\n     */\n    private computeWeight(weightedValues: Record, newValue: string): void {\n        var newNumber = parseInt(newValue, this.BASE_10);\n        if (weightedValues[newNumber]) {\n            weightedValues[newNumber]++;\n        } else {\n            weightedValues[newNumber] = 1;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exercise02Strategy.html":{"url":"classes/Exercise02Strategy.html","title":"class - Exercise02Strategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exercise02Strategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2023/exercise-strategies/exercise-02-strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ExerciseStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                BASE_10\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isGameValid\n                            \n                            \n                                    Private\n                                minimumCubePowerForGame\n                            \n                            \n                                    Private\n                                readDraw\n                            \n                            \n                                    Private\n                                readGame\n                            \n                            \n                                    Public\n                                resolve\n                            \n                            \n                                    Public\n                                resolve2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BASE_10\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2023/exercise-strategies/exercise-02-strategy.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isGameValid\n                        \n                    \n                \n            \n            \n                \n                        \n                    isGameValid(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-02-strategy.ts:71\n                        \n                    \n\n\n            \n                \n                        Vérifie si une partie est compatible avec le tirage de cubes colorés donné\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partie à vérifier\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Si une partie est compatible avec le tirage de cubes colorés donné\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        minimumCubePowerForGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    minimumCubePowerForGame(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-02-strategy.ts:90\n                        \n                    \n\n\n            \n                \n                        Retourne la puissance minimale d'une partie\nPuissance minimale => multiplication des nombres de cubes de couleur minimaux pour passer tous les rounds\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Partie dont on veut calculer la puissance minimale\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                La puissance minimale d'une partie\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readDraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    readDraw(drawAsString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-02-strategy.ts:56\n                        \n                    \n\n\n            \n                \n                        Convertit un round sous format string en format objet\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drawAsString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Un round sous format string\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                Un round sous format objet\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    readGame(gameAsString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-02-strategy.ts:40\n                        \n                    \n\n\n            \n                \n                        Convertit une partie sous format string en format objet\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                gameAsString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Une partie sous format string\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Game\n\n                        \n                            \n                                Une partie sous format objet\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-02-strategy.ts:17\n                        \n                    \n\n\n            \n                \n                        Prends une liste de sets ayant eu plusieurs tirages, compile ceux qui peuvent correspondre à un set donné, et en retourne la somme des identifiants\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                La somme des identifiants des sets correspondant à un set déterminé\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve2\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve2(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-02-strategy.ts:29\n                        \n                    \n\n\n            \n                \n                        Prends une liste de parties, et calcule la somme de leurs puissances minimales\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                La somme des puissances minimales de plusieurs parties\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\ninterface Game {\n    draws: Record[];\n    id: number;\n}\n\nexport class Exercise02Strategy implements ExerciseStrategy {\n\n    private readonly BASE_10 = 10;\n\n    /**\n     * Prends une liste de sets ayant eu plusieurs tirages, compile ceux qui peuvent correspondre à un set donné, et en retourne la somme des identifiants\n     * @param data Jeu de données à traiter\n     * @returns La somme des identifiants des sets correspondant à un set déterminé\n     */\n    public resolve(data: string[]): number {\n        return data\n            .map((str: string) => this.readGame(str))\n            .filter((game: Game) => this.isGameValid(game))\n            .reduce((sum: number, current: Game) => sum + current.id, 0);\n    }\n\n    /**\n     * Prends une liste de parties, et calcule la somme de leurs puissances minimales\n     * @param data Jeu de données à traiter\n     * @returns La somme des puissances minimales de plusieurs parties\n     */\n    public resolve2(data: string[]): number {\n        return data\n            .map((str: string) => this.readGame(str))\n            .reduce((sum: number, game: Game) => sum + this.minimumCubePowerForGame(game), 0);\n    }\n\n    /**\n     * Convertit une partie sous format string en format objet\n     * @param gameAsString Une partie sous format string\n     * @returns Une partie sous format objet\n     */\n    private readGame(gameAsString: string): Game {\n        const GAME_PREFIX_LENGTH = 'Game '.length;\n\n        const [gameIdentifier, draws]: string[] = gameAsString.split(': ');\n        \n        return {\n            draws: draws.split('; ').map((draw: string) => this.readDraw(draw)),\n            id: parseInt(gameIdentifier.substring(GAME_PREFIX_LENGTH), this.BASE_10),\n        };\n    }\n\n    /**\n     * Convertit un round sous format string en format objet\n     * @param drawAsString Un round sous format string\n     * @returns Un round sous format objet\n     */\n    private readDraw(drawAsString: string): Record {\n        const draw: Record = {};\n\n        drawAsString.split(', ').map((colorAndValue: string) => {\n            const [value, color]: string[] = colorAndValue.split(' ');\n            draw[color] = parseInt(value, this.BASE_10);\n        });\n\n        return draw;\n    }\n\n    /** Vérifie si une partie est compatible avec le tirage de cubes colorés donné\n     * @param game Partie à vérifier\n     * @returns Si une partie est compatible avec le tirage de cubes colorés donné\n     */\n    private isGameValid(game: Game): boolean {\n        const SET_DATA: Record = {\n            blue: 14,\n            green: 13,\n            red: 12,\n        };\n\n        return Object.keys(SET_DATA).every((color: string) => {\n            const colorValue = SET_DATA[color];\n            return game.draws.every((draw: Record) => draw[color] ? draw[color]  multiplication des nombres de cubes de couleur minimaux pour passer tous les rounds\n     * @param game Partie dont on veut calculer la puissance minimale\n     * @returns  La puissance minimale d'une partie\n     */\n    private minimumCubePowerForGame(game: Game): number {\n        const maxPerColor: Record = {};\n        \n        game.draws.forEach((draw: Record) => {\n            Object.keys(draw)\n                .filter((color: string) => !maxPerColor[color] || maxPerColor[color]  maxPerColor[color] = draw[color]);\n        });\n\n        return Object.keys(maxPerColor).reduce((sum: number, currentColor: string) => sum * maxPerColor[currentColor], 1);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exercise02Strategy-1.html":{"url":"classes/Exercise02Strategy-1.html","title":"class - Exercise02Strategy-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exercise02Strategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2024/exercise-strategies/exercise-02-strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ExerciseStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                BASE_10\n                            \n                            \n                                    Private\n                                    Readonly\n                                SEPARATOR\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isDeltaInvalid\n                            \n                            \n                                    Private\n                                isDeltaValid\n                            \n                            \n                                    Private\n                                isLineValid\n                            \n                            \n                                    Private\n                                isLineValidEvenWithOneItemRemoved\n                            \n                            \n                                    Private\n                                readFile\n                            \n                            \n                                    Public\n                                resolve\n                            \n                            \n                                    Public\n                                resolve2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BASE_10\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2024/exercise-strategies/exercise-02-strategy.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ' '\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2024/exercise-strategies/exercise-02-strategy.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isDeltaInvalid\n                        \n                    \n                \n            \n            \n                \n                        \n                    isDeltaInvalid(firstNumber: number, secondNumber: number, isIncreasing: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-02-strategy.ts:94\n                        \n                    \n\n\n            \n                \n                        Retourne si le Delta entre 2 chiffres consécutif est invalide.\nLe delta est invalide si l'écart entre les  chiffres n'est pas compris entre 1 et 3.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                firstNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Le premier chiffre de la suite\n\n                                            \n                                        \n                                        \n                                                secondNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Le deuxième chiffre de la suite\n\n                                            \n                                        \n                                        \n                                                isIncreasing\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Si la suite est croissante ou non.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Si le Delta entre 2 chiffres consécutif est invalide.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isDeltaValid\n                        \n                    \n                \n            \n            \n                \n                        \n                    isDeltaValid(firstNumber: number, secondNumber: number, isIncreasing: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-02-strategy.ts:106\n                        \n                    \n\n\n            \n                \n                        Retourne si le Delta entre 2 chiffres consécutif est valide.\nLe delta est valide si l'écart entre les  chiffres est compris entre 1 et 3.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                firstNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Le premier chiffre de la suite\n\n                                            \n                                        \n                                        \n                                                secondNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Le deuxième chiffre de la suite\n\n                                            \n                                        \n                                        \n                                                isIncreasing\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Si la suite est croissante ou non.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Si le Delta entre 2 chiffres consécutif est valide.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLineValid\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLineValid(line: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-02-strategy.ts:54\n                        \n                    \n\n\n            \n                \n                        Retourne si une ligne est valide.\nUne ligne est valide si les chiffres sont tous croissants ou tous décroissants,\navec un écart entre chaque chiffre compris entre 1 et 3.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                line\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Le nombre de lignes valides.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLineValidEvenWithOneItemRemoved\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLineValidEvenWithOneItemRemoved(line: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-02-strategy.ts:74\n                        \n                    \n\n\n            \n                \n                        Retourne si une ligne est valide.\nUne ligne est valide si les chiffres sont tous croissants ou tous décroissants,\navec un écart entre chaque chiffre compris entre 1 et 3.\nUne ligne est aussi considérée valide si l'on obtient une sous-ligne valide en ignorant l'un de ses chiffres.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                line\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ligne à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Si une lignes est valide.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    readFile(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-02-strategy.ts:36\n                        \n                    \n\n\n            \n                \n                        Convertit le fichier en modèle de données\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-02-strategy.ts:15\n                        \n                    \n\n\n            \n                \n                        Prends un jeu de données, et retourne le nombre de lignes valides.\nUne ligne est valide si les chiffres sont tous croissants ou tous décroissants,\navec un écart entre chaque chiffre compris entre 1 et 3.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Le nombre de lignes valides.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve2\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve2(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-02-strategy.ts:29\n                        \n                    \n\n\n            \n                \n                        Prends un jeu de données, et retourne le nombre de lignes valides.\nUne ligne est valide si les chiffres sont tous croissants ou tous décroissants,\navec un écart entre chaque chiffre compris entre 1 et 3.\nUne ligne est aussi considérée valide si l'on obtient une sous-ligne valide en ignorant l'un de ses chiffres.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Le nombre de lignes valides.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\nexport class Exercise02Strategy implements ExerciseStrategy {\n\n    private readonly BASE_10 = 10;\n    private readonly SEPARATOR = ' ';\n\n    /**\n     * Prends un jeu de données, et retourne le nombre de lignes valides.\n     * Une ligne est valide si les chiffres sont tous croissants ou tous décroissants,\n     * avec un écart entre chaque chiffre compris entre 1 et 3.\n     * @param data Jeu de données à traiter\n     * @returns Le nombre de lignes valides.\n     */\n    public resolve(data: string[]): number {\n        return this.readFile(data)\n            .filter((line: number[]) => this.isLineValid(line))\n            .length;\n    }\n\n    /**\n     * Prends un jeu de données, et retourne le nombre de lignes valides.\n     * Une ligne est valide si les chiffres sont tous croissants ou tous décroissants,\n     * avec un écart entre chaque chiffre compris entre 1 et 3.\n     * Une ligne est aussi considérée valide si l'on obtient une sous-ligne valide en ignorant l'un de ses chiffres.\n     * @param data Jeu de données à traiter\n     * @returns Le nombre de lignes valides.\n     */\n    public resolve2(data: string[]): number {\n        return this.readFile(data)\n            .filter((line: number[]) => this.isLineValidEvenWithOneItemRemoved(line))\n            .length;\n    }\n\n    /** Convertit le fichier en modèle de données */\n    private readFile(data: string[]): number[][] {\n        return data.map((line: string) => line.split(this.SEPARATOR).map((value: string) => parseInt(value, this.BASE_10)));\n    }\n    /**\n     * Prends un jeu de données, et retourne le nombre de lignes valides.\n     * Une ligne est valide si les chiffres sont tous croissants ou tous décroissants,\n     * avec un écart entre chaque chiffre compris entre 1 et 3.\n     * @param data Jeu de données à traiter\n     * @returns Le nombre de lignes valides.\n     */\n\n    /**\n     * Retourne si une ligne est valide.\n     * Une ligne est valide si les chiffres sont tous croissants ou tous décroissants,\n     * avec un écart entre chaque chiffre compris entre 1 et 3.\n     * @param line ligne à traiter\n     * @returns Si une lignes est valide.\n     */\n    private isLineValid(line: number[]): boolean {\n        let isIncreasing: boolean = (line[1] - line[0]) > 0;\n\n        for (let i = 0; i this.isLineValid(currentLine));\n    }\n\n    /**\n     * Retourne si le Delta entre 2 chiffres consécutif est invalide.\n     * Le delta est invalide si l'écart entre les  chiffres n'est pas compris entre 1 et 3.\n     * @param firstNumber Le premier chiffre de la suite\n     * @param secondNumber Le deuxième chiffre de la suite\n     * @param isIncreasing Si la suite est croissante ou non.\n     * @returns Si le Delta entre 2 chiffres consécutif est invalide.\n     */\n    private isDeltaInvalid(firstNumber: number, secondNumber: number, isIncreasing: boolean): boolean {\n        return !this.isDeltaValid(firstNumber, secondNumber, isIncreasing);\n    }\n\n    /**\n     * Retourne si le Delta entre 2 chiffres consécutif est valide.\n     * Le delta est valide si l'écart entre les  chiffres est compris entre 1 et 3.\n     * @param firstNumber Le premier chiffre de la suite\n     * @param secondNumber Le deuxième chiffre de la suite\n     * @param isIncreasing Si la suite est croissante ou non.\n     * @returns Si le Delta entre 2 chiffres consécutif est valide.\n     */\n    private isDeltaValid(firstNumber: number, secondNumber: number, isIncreasing: boolean): boolean {\n        let delta: number = isIncreasing\n            ? secondNumber - firstNumber\n            : firstNumber - secondNumber;\n\n        return 1 \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exercise03Strategy.html":{"url":"classes/Exercise03Strategy.html","title":"class - Exercise03Strategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exercise03Strategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2023/exercise-strategies/exercise-03-strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ExerciseStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                BASE_10\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAdjacentTwoNumbers\n                            \n                            \n                                    Private\n                                isDot\n                            \n                            \n                                    Private\n                                isInRange\n                            \n                            \n                                    Private\n                                isNumber\n                            \n                            \n                                    Private\n                                isNumberSurrounded\n                            \n                            \n                                    Private\n                                isSpecialChar\n                            \n                            \n                                    Private\n                                isStar\n                            \n                            \n                                    Public\n                                resolve\n                            \n                            \n                                    Public\n                                resolve2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BASE_10\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2023/exercise-strategies/exercise-03-strategy.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAdjacentTwoNumbers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAdjacentTwoNumbers(data: string[], indexI: number, indexJ: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-03-strategy.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                indexI\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                indexJ\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isDot\n                        \n                    \n                \n            \n            \n                \n                        \n                    isDot(char: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-03-strategy.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                char\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isInRange\n                        \n                    \n                \n            \n            \n                \n                        \n                    isInRange(index: number, arr: string[] | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-03-strategy.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arr\n                                            \n                                                        string[] | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    isNumber(char: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-03-strategy.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                char\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isNumberSurrounded\n                        \n                    \n                \n            \n            \n                \n                        \n                    isNumberSurrounded(data: string[], indexI: number, indexJ: number, currentNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-03-strategy.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                indexI\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                indexJ\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSpecialChar\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSpecialChar(char: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-03-strategy.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                char\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isStar\n                        \n                    \n                \n            \n            \n                \n                        \n                    isStar(char: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-03-strategy.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                char\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-03-strategy.ts:12\n                        \n                    \n\n\n            \n                \n                        Pour une liste de string contenant des nombres cachés, retourne la somme des nombres entourés par au moins un caractère spécial\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                la somme des chiffres entourés par au moins un caractère spécial\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve2\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve2(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-03-strategy.ts:43\n                        \n                    \n\n\n            \n                \n                        Pour une liste de string contenant des '*' cachées, retourne la somme des multiplications des nombres qui entourent chacun d'entre eux (il faut au moins 2 nombres autour)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                la somme des multiplications des nombres qui entourent chacun d'entre eux (il faut au moins 2 nombres autour)\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\nexport class Exercise03Strategy implements ExerciseStrategy {\n\n    private readonly BASE_10 = 10;\n\n    /**\n     * Pour une liste de string contenant des nombres cachés, retourne la somme des nombres entourés par au moins un caractère spécial\n     * @param data Jeu de données à traiter\n     * @returns la somme des chiffres entourés par au moins un caractère spécial\n     */\n    public resolve(data: string[]): number {\n        let total = 0;\n\n        for (let i = 0; i  !!str);\n        if (numberArray.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exercise03Strategy-1.html":{"url":"classes/Exercise03Strategy-1.html","title":"class - Exercise03Strategy-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exercise03Strategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2024/exercise-strategies/exercise-03-strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ExerciseStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                BASE_10\n                            \n                            \n                                    Private\n                                    Readonly\n                                DOABLE_TEXT\n                            \n                            \n                                    Private\n                                    Readonly\n                                REGEX_MULTIPLIER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                computeMultiplication\n                            \n                            \n                                    Private\n                                getDoableText\n                            \n                            \n                                    Private\n                                getMultiplier\n                            \n                            \n                                    Private\n                                readRegex\n                            \n                            \n                                    Public\n                                resolve\n                            \n                            \n                                    Public\n                                resolve2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BASE_10\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2024/exercise-strategies/exercise-03-strategy.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        DOABLE_TEXT\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RegExp\n\n                    \n                \n                \n                    \n                        Default value : /(?:^|do\\(\\))(.*?)(?:don't\\(\\)|$)/g\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2024/exercise-strategies/exercise-03-strategy.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        REGEX_MULTIPLIER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RegExp\n\n                    \n                \n                \n                    \n                        Default value : /mul\\(\\d{1,3},\\d{1,3}\\)/g\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2024/exercise-strategies/exercise-03-strategy.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        computeMultiplication\n                        \n                    \n                \n            \n            \n                \n                        \n                    computeMultiplication(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-03-strategy.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getDoableText\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDoableText(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-03-strategy.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getMultiplier\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMultiplier(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-03-strategy.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readRegex\n                        \n                    \n                \n            \n            \n                \n                        \n                    readRegex(str: string, regex: RegExp)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-03-strategy.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                regex\n                                            \n                                                        RegExp\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-03-strategy.ts:14\n                        \n                    \n\n\n            \n                \n                        Prends un jeu de données, ordonne chaque colonne dans l'ordre croissant, et retourne la somme des différences entre les valeurs de chaque niveau\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                La somme des différences entre les valeurs de chaque niveau, ordonné dans l'ordre croissant\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve2\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve2(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/exercise-strategies/exercise-03-strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\nexport class Exercise03Strategy implements ExerciseStrategy {\n\n    private readonly BASE_10 = 10;\n    private readonly DOABLE_TEXT: RegExp = /(?:^|do\\(\\))(.*?)(?:don't\\(\\)|$)/g;\n    private readonly REGEX_MULTIPLIER: RegExp = /mul\\(\\d{1,3},\\d{1,3}\\)/g;\n\n    /**\n     * Prends un jeu de données, ordonne chaque colonne dans l'ordre croissant, et retourne la somme des différences entre les valeurs de chaque niveau\n     * @param data Jeu de données à traiter\n     * @returns La somme des différences entre les valeurs de chaque niveau, ordonné dans l'ordre croissant\n     */\n    public resolve(data: string[]): number {\n        return data.map((str: string) => this.getMultiplier(str))\n            .flat()\n            .map((str: string) => this.computeMultiplication(str))\n            .reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n    }\n\n    public resolve2(data: string[]): number {\n        var entireFile: string = data.reduce((accumulator, currentValue) => accumulator + currentValue, \"\");\n        console.log(this.getDoableText(entireFile));\n        return this.getDoableText(entireFile)\n            .map((str: string) => this.getMultiplier(str))\n            .flat()\n            .map((str: string) => this.computeMultiplication(str))\n            .reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n    }\n\n    private getMultiplier(str: string): string[] {\n        return this.readRegex(str, this.REGEX_MULTIPLIER);\n    }\n    private getDoableText(str: string): string[] {\n        return this.readRegex(str, this.DOABLE_TEXT);\n    }\n\n    private readRegex(str: string, regex: RegExp): string[] {\n        const matches = str.match(regex);\n        return matches ? matches : [];\n    }\n\n    private computeMultiplication(str: string): number {\n        const regex = /\\d{1,3}/g;\n        const matches = str.match(regex);\n        if (!matches) {\n            return 0;\n        }\n\n        var numberLeft: number = parseInt(matches[0], this.BASE_10);\n        var numberRight: number = parseInt(matches[1], this.BASE_10);\n        return numberLeft * numberRight;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exercise04Strategy.html":{"url":"classes/Exercise04Strategy.html","title":"class - Exercise04Strategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exercise04Strategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2023/exercise-strategies/exercise-04-strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ExerciseStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                BASE_10\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                numberOfWinningNumbers\n                            \n                            \n                                    Private\n                                readLine\n                            \n                            \n                                    Public\n                                resolve\n                            \n                            \n                                    Public\n                                resolve2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BASE_10\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2023/exercise-strategies/exercise-04-strategy.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        numberOfWinningNumbers\n                        \n                    \n                \n            \n            \n                \n                        \n                    numberOfWinningNumbers(line: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-04-strategy.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                line\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readLine\n                        \n                    \n                \n            \n            \n                \n                        \n                    readLine(line: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-04-strategy.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                line\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-04-strategy.ts:12\n                        \n                    \n\n\n            \n                \n                        Pour une liste de chiffres vainqueurs / chiffres tirés, retourne la valeur de votre tirage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                la valeur de votre tirage\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve2\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve2(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-04-strategy.ts:23\n                        \n                    \n\n\n            \n                \n                        Pour une liste de chiffres vainqueurs / chiffres tirés, retourne le nombre de ticket (des tickets sont rajoutés procéduralement)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                le nombre de tickets disponibles, après génération\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\nexport class Exercise04Strategy implements ExerciseStrategy {\n\n    private readonly BASE_10 = 10;\n\n    /**\n     * Pour une liste de chiffres vainqueurs / chiffres tirés, retourne la valeur de votre tirage\n     * @param data Jeu de données à traiter\n     * @returns la valeur de votre tirage\n     */\n    public resolve(data: string[]): number {\n        return data\n            .map((line: string) => this.readLine(line))\n            .reduce((sum: number, current: number) => sum + current, 0);\n    }\n\n    /**\n     * Pour une liste de chiffres vainqueurs / chiffres tirés, retourne le nombre de ticket (des tickets sont rajoutés procéduralement)\n     * @param data Jeu de données à traiter\n     * @returns le nombre de tickets disponibles, après génération\n     */\n    public resolve2(data: string[]): number {\n        const sizes: number[] = data.map(() => 1);\n\n        data.forEach((line: string, index: number) => {\n            const n: number = this.numberOfWinningNumbers(line);\n            for (let i = index + 1; i  sum + current, 0);\n    }\n\n    private readLine(line: string): number {\n        // On supprime le morceau 'Partie XYZ :'\n        line = line.split(':')[1];\n\n        const [winningNumbersStr, elfNumbersStr]: string[] = line.split('|');\n        const winningNumbers: number[] = winningNumbersStr\n            .split(' ')\n            .filter((str: string) => !!str)\n            .map((str: string) => parseInt(str, this.BASE_10));\n        const elfNumbers: number[] = elfNumbersStr\n            .split(' ')\n            .filter((str: string) => !!str)\n            .map((str: string) => parseInt(str, this.BASE_10));\n\n        let total = 0;\n        elfNumbers.forEach((n: number) => {\n            if (winningNumbers.includes(n)) {\n                if (total === 0) {\n                    total = 1;\n                } else {\n                    total *= 2;\n                }\n            }\n        });\n        return total;\n    }\n\n    private numberOfWinningNumbers(line: string): number {\n        // On supprime le morceau 'Partie XYZ :'\n        line = line.split(':')[1];\n\n        const [winningNumbersStr, elfNumbersStr]: string[] = line.split('|');\n        const winningNumbers: number[] = winningNumbersStr\n            .split(' ')\n            .filter((str: string) => !!str)\n            .map((str: string) => parseInt(str, this.BASE_10));\n        const elfNumbers: number[] = elfNumbersStr\n            .split(' ')\n            .filter((str: string) => !!str)\n            .map((str: string) => parseInt(str, this.BASE_10));\n\n        return elfNumbers\n            .filter((n: number) => (winningNumbers.includes(n)))\n            .length;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exercise05Strategy.html":{"url":"classes/Exercise05Strategy.html","title":"class - Exercise05Strategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exercise05Strategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2023/exercise-strategies/exercise-05-strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ExerciseStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                BASE_10\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertSeedsToLocation\n                            \n                            \n                                    Private\n                                getAlmanacs\n                            \n                            \n                                    Public\n                                resolve\n                            \n                            \n                                    Public\n                                resolve2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BASE_10\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2023/exercise-strategies/exercise-05-strategy.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        convertSeedsToLocation\n                        \n                    \n                \n            \n            \n                \n                        \n                    convertSeedsToLocation(seeds: number[], almanacs: Map[][])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-05-strategy.ts:49\n                        \n                    \n\n\n            \n                \n                        Méthode temporaire\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seeds\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                almanacs\n                                            \n                                                            Map[][]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     number[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAlmanacs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAlmanacs(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-05-strategy.ts:26\n                        \n                    \n\n\n            \n                \n                        Méthode temporaire\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-05-strategy.ts:14\n                        \n                    \n\n\n            \n                \n                        Méthode temporaire\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve2\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve2(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-05-strategy.ts:21\n                        \n                    \n\n\n            \n                \n                        Méthode temporaire\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\ninterface Map {\n    destination: number;\n    source: number;\n    range: number;\n}\n\nexport class Exercise05Strategy implements ExerciseStrategy {\n\n    private readonly BASE_10 = 10;\n\n    /** Méthode temporaire */\n    public resolve(data: string[]): number {\n        const seeds = data[0].split(': ')[1].split(' ').map((n: string) => parseInt(n, this.BASE_10));\n        const almanacs = this.getAlmanacs(data);\n        return Math.min(...this.convertSeedsToLocation(seeds, almanacs));\n    }\n\n    /** Méthode temporaire */\n    public resolve2(data: string[]): number {\n        throw Error('Méthode non implémentée - ' + data.length);\n    }\n\n    /** Méthode temporaire */\n    private getAlmanacs(data: string[]): Map[][] {\n        const almanacs: Map[][] = [];\n        let almanacsIndex = 0;\n        let index = 2;\n        \n        while(index  parseInt(str, this.BASE_10));\n                almanacs[almanacsIndex].push({ destination, range, source });\n                index++;\n            }\n\n            almanacsIndex++;\n            index++;\n        }\n\n        return almanacs;\n    }\n    \n    /** Méthode temporaire */\n    private convertSeedsToLocation(seeds: number[], almanacs: Map[][]): number[] {\n        const convertedSeeds = [...seeds];\n\n        for (let i = 0; i  {\n                almanac\n                    .filter((map: Map) => map.source  convertedSeeds[i] = convertedSeeds[i] - map.source + map.destination);\n            });\n        }\n\n        return convertedSeeds;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exercise06Strategy.html":{"url":"classes/Exercise06Strategy.html","title":"class - Exercise06Strategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exercise06Strategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2023/exercise-strategies/exercise-06-strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ExerciseStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                BASE_10\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                numberOfBetterTimes\n                            \n                            \n                                    Private\n                                readGames\n                            \n                            \n                                    Private\n                                readGames2\n                            \n                            \n                                    Private\n                                readLine\n                            \n                            \n                                    Public\n                                resolve\n                            \n                            \n                                    Public\n                                resolve2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BASE_10\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2023/exercise-strategies/exercise-06-strategy.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        numberOfBetterTimes\n                        \n                    \n                \n            \n            \n                \n                        \n                    numberOfBetterTimes(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-06-strategy.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readGames\n                        \n                    \n                \n            \n            \n                \n                        \n                    readGames(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-06-strategy.ts:37\n                        \n                    \n\n\n            \n                \n                        Construit le jeu de parties\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Données des temps et distances par partie\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Game[]\n\n                        \n                            \n                                le jeu de parties\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readGames2\n                        \n                    \n                \n            \n            \n                \n                        \n                    readGames2(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-06-strategy.ts:55\n                        \n                    \n\n\n            \n                \n                        Construit le jeu de parties en ignorant les espaces\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Données des temps et distances par partie\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Game[]\n\n                        \n                            \n                                le jeu de parties\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readLine\n                        \n                    \n                \n            \n            \n                \n                        \n                    readLine(line: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-06-strategy.ts:73\n                        \n                    \n\n\n            \n                \n                        Les nombres qui composent une ligne\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                line\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données composé de plusieurs nombres\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     number[]\n\n                        \n                            \n                                Les nombres qui composent une ligne\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-06-strategy.ts:17\n                        \n                    \n\n\n            \n                \n                        Prends un jeu de données, et multiplie les nombres de possibilités permettant de battre le record par partie\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                La multiplication des nombres de possibilités permettant de battre le record par partie\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve2\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve2(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-06-strategy.ts:25\n                        \n                    \n\n\n            \n                \n                        Méthode temporaire\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\ninterface Game {\n    distance: number;\n    time: number;\n}\n\nexport class Exercise06Strategy implements ExerciseStrategy {\n\n    private readonly BASE_10 = 10;\n\n    /**\n     * Prends un jeu de données, et multiplie les nombres de possibilités permettant de battre le record par partie\n     * @param data Jeu de données à traiter\n     * @returns La multiplication des nombres de possibilités permettant de battre le record par partie\n     */\n    public resolve(data: string[]): number {\n        return this\n            .readGames(data)\n            .map((game: Game) => this.numberOfBetterTimes(game))\n            .reduce((total: number, current: number) => total * current, 1);\n    }\n\n    /** Méthode temporaire */\n    public resolve2(data: string[]): number {\n        return this\n            .readGames2(data)\n            .map((game: Game) => this.numberOfBetterTimes(game))\n            .reduce((total: number, current: number) => total * current, 1);\n    }\n\n    /**\n     * Construit le jeu de parties\n     * @param data Données des temps et distances par partie\n     * @returns le jeu de parties\n     */\n    private readGames(data: string[]): Game[] {\n        const games: Game[] = [];\n\n        const times = this.readLine(data[0]);\n        const distances = this.readLine(data[1]);\n\n        for (let i = 0; i  !!item)\n            .map((item: string) => parseInt(item, this.BASE_10));\n    }\n\n    private numberOfBetterTimes(game: Game): number {\n        let betterTimes = 0;\n        let acceleration = 1;\n\n        for (let i = 1; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exercise07Strategy.html":{"url":"classes/Exercise07Strategy.html","title":"class - Exercise07Strategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exercise07Strategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ExerciseStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                BASE_10\n                            \n                            \n                                    Private\n                                    Readonly\n                                JOKER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                compareDefaultHands\n                            \n                            \n                                    Private\n                                compareHands\n                            \n                            \n                                    Private\n                                getMappedCards\n                            \n                            \n                                    Private\n                                isDoublePair\n                            \n                            \n                                    Private\n                                isFiveOfAKind\n                            \n                            \n                                    Private\n                                isFourOfAKind\n                            \n                            \n                                    Private\n                                isFullHouse\n                            \n                            \n                                    Private\n                                isSinglePair\n                            \n                            \n                                    Private\n                                isThreeOfAKind\n                            \n                            \n                                    Private\n                                optimiseCards\n                            \n                            \n                                    Private\n                                readHands\n                            \n                            \n                                    Public\n                                resolve\n                            \n                            \n                                    Public\n                                resolve2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BASE_10\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        JOKER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'J'\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        compareDefaultHands\n                        \n                    \n                \n            \n            \n                \n                        \n                    compareDefaultHands(cards1: string, cards2: string, areJokerActivated: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:148\n                        \n                    \n\n\n            \n                \n                        Compare 2 mains composées chacune de 5 cartes différentes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cards1\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                cards2\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                areJokerActivated\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Si les Jokers sont activés (si oui, leur valeur est abaissée au minimum)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                1 si la première a plus de valeur ; -1 si c'est la seconde ; 0 si elles sont égales\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        compareHands\n                        \n                    \n                \n            \n            \n                \n                        \n                    compareHands(hand1: Hand, hand2: Hand, areJokerActivated: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:79\n                        \n                    \n\n\n            \n                \n                        Compare 2 mains\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                hand1\n                                            \n                                                            Hand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Première main à comparer\n\n                                            \n                                        \n                                        \n                                                hand2\n                                            \n                                                            Hand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Deuxième main à comparer\n\n                                            \n                                        \n                                        \n                                                areJokerActivated\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                1 si la première a plus de valeur ; -1 si c'est la seconde ; 0 si elles sont égales\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getMappedCards\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMappedCards(cards: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:58\n                        \n                    \n\n\n            \n                \n                        Convertit des cartes en map de chaque clé / sa quantité\n'KK997' +> { 'K': 2, '9': 2, '7': 1 }\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cards\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    cartes à formatter\n'KK997' +> { 'K': 2, '9': 2, '7': 1 }\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                map de chaque clé / sa quantité\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isDoublePair\n                        \n                    \n                \n            \n            \n                \n                        \n                    isDoublePair(mappedCards: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mappedCards\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isFiveOfAKind\n                        \n                    \n                \n            \n            \n                \n                        \n                    isFiveOfAKind(mappedCards: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mappedCards\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isFourOfAKind\n                        \n                    \n                \n            \n            \n                \n                        \n                    isFourOfAKind(mappedCards: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mappedCards\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isFullHouse\n                        \n                    \n                \n            \n            \n                \n                        \n                    isFullHouse(mappedCards: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mappedCards\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSinglePair\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSinglePair(mappedCards: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mappedCards\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isThreeOfAKind\n                        \n                    \n                \n            \n            \n                \n                        \n                    isThreeOfAKind(mappedCards: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mappedCards\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        optimiseCards\n                        \n                    \n                \n            \n            \n                \n                        \n                    optimiseCards(mappedCards: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:170\n                        \n                    \n\n\n            \n                \n                        Prends une main et l'optimise :\nOn récupère la carte la plus représentée (autre que Joker),\nEt on convertit tous les Jokers vers elle.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mappedCards\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    une main à optimiser\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                une main optimisée\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readHands\n                        \n                    \n                \n            \n            \n                \n                        \n                    readHands(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:45\n                        \n                    \n\n\n            \n                \n                        Convertit des Mains du format string au format objet\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Liste de n Mains\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Hand[]\n\n                        \n                            \n                                des Mains au format objet\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:17\n                        \n                    \n\n\n            \n                \n                        Prends un jeu de données, et fait la somme des multiplications des paris des mains par rapport à leurs classements\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                La somme des multiplications des paris des mains par rapport à leurs classements\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resolve2\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolve2(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts:31\n                        \n                    \n\n\n            \n                \n                        Prends un jeu de données, optimise les mains ayant des Jokers, et fait la somme des multiplications des paris des mains par rapport à leurs classements\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Jeu de données à traiter\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                La somme des multiplications des paris des mains (optimisées) par rapport à leurs classements\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\ninterface Hand {\n    bet: number;\n    cards: string;\n}\nexport class Exercise07Strategy implements ExerciseStrategy {\n\n    private readonly BASE_10 = 10;\n    private readonly JOKER = 'J';\n\n    /**\n     * Prends un jeu de données, et fait la somme des multiplications des paris des mains par rapport à leurs classements\n     * @param data Jeu de données à traiter\n     * @returns La somme des multiplications des paris des mains par rapport à leurs classements\n     */\n    public resolve(data: string[]): number {\n        const hands = this\n            .readHands(data)\n            .sort((hand1: Hand, hand2: Hand) => this.compareHands(hand1, hand2, false));\n\n        return hands\n            .reduce((total: number, current: Hand, index: number) => total + current.bet * (hands.length - index), 0);\n    }\n\n    /**\n     * Prends un jeu de données, optimise les mains ayant des Jokers, et fait la somme des multiplications des paris des mains par rapport à leurs classements\n     * @param data Jeu de données à traiter\n     * @returns La somme des multiplications des paris des mains (optimisées) par rapport à leurs classements\n     */\n    public resolve2(data: string[]): number {\n        const hands = this\n            .readHands(data)\n            .sort((hand1: Hand, hand2: Hand) => this.compareHands(hand1, hand2, true));\n\n        return hands\n            .reduce((total: number, current: Hand, index: number) => total + current.bet * (hands.length - index), 0);\n    }\n\n    /**\n     * Convertit des Mains du format string au format objet\n     * @param data Liste de n Mains\n     * @returns des Mains au format objet\n     */\n    private readHands(data: string[]): Hand[] {\n        return data.map((str: string) => {\n            const [cards, bet] = str.split(' ');\n            return { bet: parseInt(bet, this.BASE_10), cards };\n        });\n    }\n\n    /**\n     * Convertit des cartes en map de chaque clé / sa quantité\n     * @param cards cartes à formatter\n     * 'KK997' +> { 'K': 2, '9': 2, '7': 1 }\n     * @returns map de chaque clé / sa quantité\n     */\n    private getMappedCards(cards: string): Record {\n        const mappedCards: Record = {};\n        for (let i = 0; i ) => this.isFiveOfAKind(mappedCards),\n            (mappedCards: Record) => this.isFourOfAKind(mappedCards),\n            (mappedCards: Record) => this.isFullHouse(mappedCards),\n            (mappedCards: Record) => this.isThreeOfAKind(mappedCards),\n            (mappedCards: Record) => this.isDoublePair(mappedCards),\n            (mappedCards: Record) => this.isSinglePair(mappedCards),\n        ];\n\n        let mappedCards1 = this.getMappedCards(hand1.cards);\n        let mappedCards2 = this.getMappedCards(hand2.cards);\n\n        if (areJokerActivated) {\n            mappedCards1 = this.optimiseCards(mappedCards1);\n            mappedCards2 = this.optimiseCards(mappedCards2);\n        }\n\n        for (let i = 0; i ): boolean {\n        return Object.keys(mappedCards).some((key: string) => mappedCards[key] === 5);\n    }\n\n    private isFourOfAKind(mappedCards: Record): boolean {\n        return Object.keys(mappedCards).some((key: string) => mappedCards[key] === 4);\n    }\n\n    private isFullHouse(mappedCards: Record): boolean {\n        return this.isThreeOfAKind(mappedCards) && this.isSinglePair(mappedCards);\n    }\n\n    private isThreeOfAKind(mappedCards: Record): boolean {\n        return Object.keys(mappedCards).some((key: string) => mappedCards[key] === 3);\n    }\n\n    private isDoublePair(mappedCards: Record): boolean {\n        const keys = Object.keys(mappedCards);\n        // Au moins une paire, et s'il y a 3 clés, revient à dire :\n        // 1 paire, 1 autre paire, et 1 carte qui traîne\n        return keys.length === 3 && keys.some((key: string) => mappedCards[key] === 2);\n    }\n\n    private isSinglePair(mappedCards: Record): boolean {\n        return Object.keys(mappedCards).some((key: string) => mappedCards[key] === 2);\n    }\n\n    /**\n     * Compare 2 mains composées chacune de 5 cartes différentes\n     * @param hand1 Première main à comparer\n     * @param hand2 Deuxième main à comparer\n     * @param areJokerActivated Si les Jokers sont activés (si oui, leur valeur est abaissée au minimum)\n     * @returns 1 si la première a plus de valeur ; -1 si c'est la seconde ; 0 si elles sont égales\n     */\n    private compareDefaultHands(cards1: string, cards2: string, areJokerActivated: boolean): number {\n        const comparisonTable = areJokerActivated\n            ? ['A', 'K', 'Q', 'T', '9', '8', '7', '6', '5', '4', '3', '2', 'J']\n            : ['A', 'K', 'Q', 'J', 'T', '9', '8', '7', '6', '5', '4', '3', '2'];\n\n        for (let i = 0; i ): Record {\n        // Pas de Joker : pas besoin d'optimiser\n        if (!mappedCards[this.JOKER]) {\n            return mappedCards;\n        }\n\n        let keyWithMostValue = '';\n        let mostValue = 0;\n        Object.keys(mappedCards)\n            .filter((key: string) => key !== this.JOKER)\n            .forEach((key: string) => {\n                if (mappedCards[key] > mostValue) {\n                    keyWithMostValue = key;\n                    mostValue = mappedCards[key];\n                }\n            });\n\n        // Pas de meilleure clé : on retourne en l'état\n        if (!keyWithMostValue) {\n            return mappedCards;\n        }\n\n        const optimisedCards: Record = JSON.parse(JSON.stringify(mappedCards));\n        while (optimisedCards[this.JOKER] !== 0) {\n            optimisedCards[keyWithMostValue]++;\n            optimisedCards[this.JOKER]--;\n        }\n        return optimisedCards;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exercise2023Helper.html":{"url":"classes/Exercise2023Helper.html","title":"class - Exercise2023Helper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exercise2023Helper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2023/Exercise2023Helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2023/Exercise2023Helper.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Exercise[]\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exercise } from 'src/app/models/exercise';\nimport { Exercise01Strategy } from 'src/app/helpers/2023/exercise-strategies/exercise-01-strategy';\nimport { Exercise02Strategy } from 'src/app/helpers/2023/exercise-strategies/exercise-02-strategy';\nimport { Exercise03Strategy } from 'src/app/helpers/2023/exercise-strategies/exercise-03-strategy';\nimport { Exercise04Strategy } from 'src/app/helpers/2023/exercise-strategies/exercise-04-strategy';\nimport { Exercise05Strategy } from 'src/app/helpers/2023/exercise-strategies/exercise-05-strategy';\nimport { Exercise06Strategy } from 'src/app/helpers/2023/exercise-strategies/exercise-06-strategy';\nimport { Exercise07Strategy } from 'src/app/helpers/2023/exercise-strategies/exercise-07-strategy';\n\nexport class Exercise2023Helper {\n\n    public static getAll(): Exercise[] {\n        return [\n            new Exercise('01', 'Trebuchet?!', new Exercise01Strategy()),\n            new Exercise('02', 'Cube Conundrum', new Exercise02Strategy()),\n            new Exercise('03', 'Gear Ratios', new Exercise03Strategy()),\n            new Exercise('04', 'Scratchcards', new Exercise04Strategy()),\n            new Exercise('05', 'If You Give A Seed A Fertilizer', new Exercise05Strategy()),\n            new Exercise('06', 'Wait For It', new Exercise06Strategy()),\n            new Exercise('07', 'Camel Cards', new Exercise07Strategy()),\n            new Exercise('08', '???', null),\n            new Exercise('09', '???', null),\n            new Exercise('10', '???', null),\n            new Exercise('11', '???', null),\n            new Exercise('12', '???', null),\n            new Exercise('13', '???', null),\n            new Exercise('14', '???', null),\n            new Exercise('15', '???', null),\n            new Exercise('16', '???', null),\n            new Exercise('17', '???', null),\n            new Exercise('18', '???', null),\n            new Exercise('19', '???', null),\n            new Exercise('20', '???', null),\n            new Exercise('21', '???', null),\n            new Exercise('22', '???', null),\n            new Exercise('23', '???', null),\n            new Exercise('24', '???', null),\n            new Exercise('25', '???', null)\n        ];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exercise2024Helper.html":{"url":"classes/Exercise2024Helper.html","title":"class - Exercise2024Helper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exercise2024Helper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2024/Exercise2024Helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/2024/Exercise2024Helper.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Exercise[]\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exercise } from 'src/app/models/exercise';\nimport { Exercise01Strategy } from 'src/app/helpers/2024/exercise-strategies/exercise-01-strategy';\nimport { Exercise02Strategy } from 'src/app/helpers/2024/exercise-strategies/exercise-02-strategy';\nimport { Exercise03Strategy } from 'src/app/helpers/2024/exercise-strategies/exercise-03-strategy';\n\nexport class Exercise2024Helper {\n\n    public static getAll(): Exercise[] {\n        return [\n            new Exercise('01', 'Day 1: Historian Hysteria', new Exercise01Strategy()),\n            new Exercise('02', 'Day 2: Red-Nosed Reports', new Exercise02Strategy()),\n            new Exercise('03', 'Day 3 : Mull It Over', new Exercise03Strategy()),\n            new Exercise('04', '???', null),\n            new Exercise('05', '???', null),\n            new Exercise('06', '???', null),\n            new Exercise('07', '???', null),\n            new Exercise('08', '???', null),\n            new Exercise('09', '???', null),\n            new Exercise('10', '???', null),\n            new Exercise('11', '???', null),\n            new Exercise('12', '???', null),\n            new Exercise('13', '???', null),\n            new Exercise('14', '???', null),\n            new Exercise('15', '???', null),\n            new Exercise('16', '???', null),\n            new Exercise('17', '???', null),\n            new Exercise('18', '???', null),\n            new Exercise('19', '???', null),\n            new Exercise('20', '???', null),\n            new Exercise('21', '???', null),\n            new Exercise('22', '???', null),\n            new Exercise('23', '???', null),\n            new Exercise('24', '???', null),\n            new Exercise('25', '???', null)\n        ];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExerciseHelper.html":{"url":"classes/ExerciseHelper.html","title":"class - ExerciseHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExerciseHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/ExerciseHelper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(year: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/ExerciseHelper.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                year\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Exercise[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exercise } from 'src/app/models/exercise';\nimport { Exercise2023Helper } from 'src/app/helpers/2023/Exercise2023Helper';\nimport { Exercise2024Helper } from 'src/app/helpers/2024/Exercise2024Helper';\n\nexport class ExerciseHelper {\n\n    public static getAll(year: string): Exercise[] {\n        if (year == '2023') {\n            return Exercise2023Helper.getAll();\n        }\n\n        if (year == '2024') {\n            return Exercise2024Helper.getAll();\n        }\n\n        return [];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExerciseStrategy.html":{"url":"interfaces/ExerciseStrategy.html","title":"interface - ExerciseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExerciseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/exercise-strategy.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        resolve\n                                    \n                                \n                                \n                                    \n                                        resolve2\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/models/exercise-strategy.ts:2\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolve2\n                        \n                    \n                \n            \n            \n                \nresolve2(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/models/exercise-strategy.ts:3\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ExerciseStrategy {\n    resolve(data: string[]): number;\n    resolve2(data: string[]): number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                read\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/file.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/file.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Permet de lire le contenu d'un fichier\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Chemin du fichier à ouvrir\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Le contenu du fichier\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FileService {\n\n    constructor(private httpClient: HttpClient) {\n    }\n\n    /**\n     * Permet de lire le contenu d'un fichier\n     * @param filePath Chemin du fichier à ouvrir\n     * @returns Le contenu du fichier\n     */\n    public async read(filePath: string): Promise {\n        const ASCII_BACKSPACE = 10;\n        const ASCII_CARRIAGE_RETURN = 13;\n        const SEPARATOR = String.fromCharCode(ASCII_CARRIAGE_RETURN) + String.fromCharCode(ASCII_BACKSPACE);\n\n        try {\n            const fileContent: string = await firstValueFrom(this.httpClient.get(`assets/${filePath}`, { responseType: 'text' }));\n            return fileContent.split(SEPARATOR);\n        } catch (e: unknown) {\n            return [];\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2023/exercise-strategies/exercise-02-strategy.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            draws\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        draws\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draws:     Record[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\ninterface Game {\n    draws: Record[];\n    id: number;\n}\n\nexport class Exercise02Strategy implements ExerciseStrategy {\n\n    private readonly BASE_10 = 10;\n\n    /**\n     * Prends une liste de sets ayant eu plusieurs tirages, compile ceux qui peuvent correspondre à un set donné, et en retourne la somme des identifiants\n     * @param data Jeu de données à traiter\n     * @returns La somme des identifiants des sets correspondant à un set déterminé\n     */\n    public resolve(data: string[]): number {\n        return data\n            .map((str: string) => this.readGame(str))\n            .filter((game: Game) => this.isGameValid(game))\n            .reduce((sum: number, current: Game) => sum + current.id, 0);\n    }\n\n    /**\n     * Prends une liste de parties, et calcule la somme de leurs puissances minimales\n     * @param data Jeu de données à traiter\n     * @returns La somme des puissances minimales de plusieurs parties\n     */\n    public resolve2(data: string[]): number {\n        return data\n            .map((str: string) => this.readGame(str))\n            .reduce((sum: number, game: Game) => sum + this.minimumCubePowerForGame(game), 0);\n    }\n\n    /**\n     * Convertit une partie sous format string en format objet\n     * @param gameAsString Une partie sous format string\n     * @returns Une partie sous format objet\n     */\n    private readGame(gameAsString: string): Game {\n        const GAME_PREFIX_LENGTH = 'Game '.length;\n\n        const [gameIdentifier, draws]: string[] = gameAsString.split(': ');\n        \n        return {\n            draws: draws.split('; ').map((draw: string) => this.readDraw(draw)),\n            id: parseInt(gameIdentifier.substring(GAME_PREFIX_LENGTH), this.BASE_10),\n        };\n    }\n\n    /**\n     * Convertit un round sous format string en format objet\n     * @param drawAsString Un round sous format string\n     * @returns Un round sous format objet\n     */\n    private readDraw(drawAsString: string): Record {\n        const draw: Record = {};\n\n        drawAsString.split(', ').map((colorAndValue: string) => {\n            const [value, color]: string[] = colorAndValue.split(' ');\n            draw[color] = parseInt(value, this.BASE_10);\n        });\n\n        return draw;\n    }\n\n    /** Vérifie si une partie est compatible avec le tirage de cubes colorés donné\n     * @param game Partie à vérifier\n     * @returns Si une partie est compatible avec le tirage de cubes colorés donné\n     */\n    private isGameValid(game: Game): boolean {\n        const SET_DATA: Record = {\n            blue: 14,\n            green: 13,\n            red: 12,\n        };\n\n        return Object.keys(SET_DATA).every((color: string) => {\n            const colorValue = SET_DATA[color];\n            return game.draws.every((draw: Record) => draw[color] ? draw[color]  multiplication des nombres de cubes de couleur minimaux pour passer tous les rounds\n     * @param game Partie dont on veut calculer la puissance minimale\n     * @returns  La puissance minimale d'une partie\n     */\n    private minimumCubePowerForGame(game: Game): number {\n        const maxPerColor: Record = {};\n        \n        game.draws.forEach((draw: Record) => {\n            Object.keys(draw)\n                .filter((color: string) => !maxPerColor[color] || maxPerColor[color]  maxPerColor[color] = draw[color]);\n        });\n\n        return Object.keys(maxPerColor).reduce((sum: number, currentColor: string) => sum * maxPerColor[currentColor], 1);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game-1.html":{"url":"interfaces/Game-1.html","title":"interface - Game-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2023/exercise-strategies/exercise-06-strategy.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            distance\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\ninterface Game {\n    distance: number;\n    time: number;\n}\n\nexport class Exercise06Strategy implements ExerciseStrategy {\n\n    private readonly BASE_10 = 10;\n\n    /**\n     * Prends un jeu de données, et multiplie les nombres de possibilités permettant de battre le record par partie\n     * @param data Jeu de données à traiter\n     * @returns La multiplication des nombres de possibilités permettant de battre le record par partie\n     */\n    public resolve(data: string[]): number {\n        return this\n            .readGames(data)\n            .map((game: Game) => this.numberOfBetterTimes(game))\n            .reduce((total: number, current: number) => total * current, 1);\n    }\n\n    /** Méthode temporaire */\n    public resolve2(data: string[]): number {\n        return this\n            .readGames2(data)\n            .map((game: Game) => this.numberOfBetterTimes(game))\n            .reduce((total: number, current: number) => total * current, 1);\n    }\n\n    /**\n     * Construit le jeu de parties\n     * @param data Données des temps et distances par partie\n     * @returns le jeu de parties\n     */\n    private readGames(data: string[]): Game[] {\n        const games: Game[] = [];\n\n        const times = this.readLine(data[0]);\n        const distances = this.readLine(data[1]);\n\n        for (let i = 0; i  !!item)\n            .map((item: string) => parseInt(item, this.BASE_10));\n    }\n\n    private numberOfBetterTimes(game: Game): number {\n        let betterTimes = 0;\n        let acceleration = 1;\n\n        for (let i = 1; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hand.html":{"url":"interfaces/Hand.html","title":"interface - Hand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bet\n                                        \n                                \n                                \n                                        \n                                            cards\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bet:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cards\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cards:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\ninterface Hand {\n    bet: number;\n    cards: string;\n}\nexport class Exercise07Strategy implements ExerciseStrategy {\n\n    private readonly BASE_10 = 10;\n    private readonly JOKER = 'J';\n\n    /**\n     * Prends un jeu de données, et fait la somme des multiplications des paris des mains par rapport à leurs classements\n     * @param data Jeu de données à traiter\n     * @returns La somme des multiplications des paris des mains par rapport à leurs classements\n     */\n    public resolve(data: string[]): number {\n        const hands = this\n            .readHands(data)\n            .sort((hand1: Hand, hand2: Hand) => this.compareHands(hand1, hand2, false));\n\n        return hands\n            .reduce((total: number, current: Hand, index: number) => total + current.bet * (hands.length - index), 0);\n    }\n\n    /**\n     * Prends un jeu de données, optimise les mains ayant des Jokers, et fait la somme des multiplications des paris des mains par rapport à leurs classements\n     * @param data Jeu de données à traiter\n     * @returns La somme des multiplications des paris des mains (optimisées) par rapport à leurs classements\n     */\n    public resolve2(data: string[]): number {\n        const hands = this\n            .readHands(data)\n            .sort((hand1: Hand, hand2: Hand) => this.compareHands(hand1, hand2, true));\n\n        return hands\n            .reduce((total: number, current: Hand, index: number) => total + current.bet * (hands.length - index), 0);\n    }\n\n    /**\n     * Convertit des Mains du format string au format objet\n     * @param data Liste de n Mains\n     * @returns des Mains au format objet\n     */\n    private readHands(data: string[]): Hand[] {\n        return data.map((str: string) => {\n            const [cards, bet] = str.split(' ');\n            return { bet: parseInt(bet, this.BASE_10), cards };\n        });\n    }\n\n    /**\n     * Convertit des cartes en map de chaque clé / sa quantité\n     * @param cards cartes à formatter\n     * 'KK997' +> { 'K': 2, '9': 2, '7': 1 }\n     * @returns map de chaque clé / sa quantité\n     */\n    private getMappedCards(cards: string): Record {\n        const mappedCards: Record = {};\n        for (let i = 0; i ) => this.isFiveOfAKind(mappedCards),\n            (mappedCards: Record) => this.isFourOfAKind(mappedCards),\n            (mappedCards: Record) => this.isFullHouse(mappedCards),\n            (mappedCards: Record) => this.isThreeOfAKind(mappedCards),\n            (mappedCards: Record) => this.isDoublePair(mappedCards),\n            (mappedCards: Record) => this.isSinglePair(mappedCards),\n        ];\n\n        let mappedCards1 = this.getMappedCards(hand1.cards);\n        let mappedCards2 = this.getMappedCards(hand2.cards);\n\n        if (areJokerActivated) {\n            mappedCards1 = this.optimiseCards(mappedCards1);\n            mappedCards2 = this.optimiseCards(mappedCards2);\n        }\n\n        for (let i = 0; i ): boolean {\n        return Object.keys(mappedCards).some((key: string) => mappedCards[key] === 5);\n    }\n\n    private isFourOfAKind(mappedCards: Record): boolean {\n        return Object.keys(mappedCards).some((key: string) => mappedCards[key] === 4);\n    }\n\n    private isFullHouse(mappedCards: Record): boolean {\n        return this.isThreeOfAKind(mappedCards) && this.isSinglePair(mappedCards);\n    }\n\n    private isThreeOfAKind(mappedCards: Record): boolean {\n        return Object.keys(mappedCards).some((key: string) => mappedCards[key] === 3);\n    }\n\n    private isDoublePair(mappedCards: Record): boolean {\n        const keys = Object.keys(mappedCards);\n        // Au moins une paire, et s'il y a 3 clés, revient à dire :\n        // 1 paire, 1 autre paire, et 1 carte qui traîne\n        return keys.length === 3 && keys.some((key: string) => mappedCards[key] === 2);\n    }\n\n    private isSinglePair(mappedCards: Record): boolean {\n        return Object.keys(mappedCards).some((key: string) => mappedCards[key] === 2);\n    }\n\n    /**\n     * Compare 2 mains composées chacune de 5 cartes différentes\n     * @param hand1 Première main à comparer\n     * @param hand2 Deuxième main à comparer\n     * @param areJokerActivated Si les Jokers sont activés (si oui, leur valeur est abaissée au minimum)\n     * @returns 1 si la première a plus de valeur ; -1 si c'est la seconde ; 0 si elles sont égales\n     */\n    private compareDefaultHands(cards1: string, cards2: string, areJokerActivated: boolean): number {\n        const comparisonTable = areJokerActivated\n            ? ['A', 'K', 'Q', 'T', '9', '8', '7', '6', '5', '4', '3', '2', 'J']\n            : ['A', 'K', 'Q', 'J', 'T', '9', '8', '7', '6', '5', '4', '3', '2'];\n\n        for (let i = 0; i ): Record {\n        // Pas de Joker : pas besoin d'optimiser\n        if (!mappedCards[this.JOKER]) {\n            return mappedCards;\n        }\n\n        let keyWithMostValue = '';\n        let mostValue = 0;\n        Object.keys(mappedCards)\n            .filter((key: string) => key !== this.JOKER)\n            .forEach((key: string) => {\n                if (mappedCards[key] > mostValue) {\n                    keyWithMostValue = key;\n                    mostValue = mappedCards[key];\n                }\n            });\n\n        // Pas de meilleure clé : on retourne en l'état\n        if (!keyWithMostValue) {\n            return mappedCards;\n        }\n\n        const optimisedCards: Record = JSON.parse(JSON.stringify(mappedCards));\n        while (optimisedCards[this.JOKER] !== 0) {\n            optimisedCards[keyWithMostValue]++;\n            optimisedCards[this.JOKER]--;\n        }\n        return optimisedCards;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Map.html":{"url":"interfaces/Map.html","title":"interface - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/2023/exercise-strategies/exercise-05-strategy.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destination\n                                        \n                                \n                                \n                                        \n                                            range\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        range\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        range:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExerciseStrategy } from 'src/app/models/exercise-strategy';\n\ninterface Map {\n    destination: number;\n    source: number;\n    range: number;\n}\n\nexport class Exercise05Strategy implements ExerciseStrategy {\n\n    private readonly BASE_10 = 10;\n\n    /** Méthode temporaire */\n    public resolve(data: string[]): number {\n        const seeds = data[0].split(': ')[1].split(' ').map((n: string) => parseInt(n, this.BASE_10));\n        const almanacs = this.getAlmanacs(data);\n        return Math.min(...this.convertSeedsToLocation(seeds, almanacs));\n    }\n\n    /** Méthode temporaire */\n    public resolve2(data: string[]): number {\n        throw Error('Méthode non implémentée - ' + data.length);\n    }\n\n    /** Méthode temporaire */\n    private getAlmanacs(data: string[]): Map[][] {\n        const almanacs: Map[][] = [];\n        let almanacsIndex = 0;\n        let index = 2;\n        \n        while(index  parseInt(str, this.BASE_10));\n                almanacs[almanacsIndex].push({ destination, range, source });\n                index++;\n            }\n\n            almanacsIndex++;\n            index++;\n        }\n\n        return almanacs;\n    }\n    \n    /** Méthode temporaire */\n    private convertSeedsToLocation(seeds: number[], almanacs: Map[][]): number[] {\n        const convertedSeeds = [...seeds];\n\n        for (let i = 0; i  {\n                almanac\n                    .filter((map: Map) => map.source  convertedSeeds[i] = convertedSeeds[i] - map.source + map.destination);\n            });\n        }\n\n        return convertedSeeds;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/helpers/2023/Exercise2023Helper.ts\n            \n            class\n            Exercise2023Helper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/helpers/2023/exercise-strategies/exercise-01-strategy.ts\n            \n            class\n            Exercise01Strategy\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/helpers/2023/exercise-strategies/exercise-02-strategy.ts\n            \n            class\n            Exercise02Strategy\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/helpers/2023/exercise-strategies/exercise-02-strategy.ts\n            \n            interface\n            Game\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/helpers/2023/exercise-strategies/exercise-03-strategy.ts\n            \n            class\n            Exercise03Strategy\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/helpers/2023/exercise-strategies/exercise-04-strategy.ts\n            \n            class\n            Exercise04Strategy\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/helpers/2023/exercise-strategies/exercise-05-strategy.ts\n            \n            class\n            Exercise05Strategy\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/helpers/2023/exercise-strategies/exercise-05-strategy.ts\n            \n            interface\n            Map\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/helpers/2023/exercise-strategies/exercise-06-strategy.ts\n            \n            class\n            Exercise06Strategy\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/helpers/2023/exercise-strategies/exercise-06-strategy.ts\n            \n            interface\n            Game\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts\n            \n            class\n            Exercise07Strategy\n            \n                43 %\n                (7/16)\n            \n        \n        \n            \n                \n                src/app/helpers/2023/exercise-strategies/exercise-07-strategy.ts\n            \n            interface\n            Hand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/helpers/2024/Exercise2024Helper.ts\n            \n            class\n            Exercise2024Helper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/helpers/2024/exercise-strategies/exercise-01-strategy.ts\n            \n            class\n            Exercise01Strategy\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/helpers/2024/exercise-strategies/exercise-02-strategy.ts\n            \n            class\n            Exercise02Strategy\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/app/helpers/2024/exercise-strategies/exercise-03-strategy.ts\n            \n            class\n            Exercise03Strategy\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/helpers/ExerciseHelper.ts\n            \n            class\n            ExerciseHelper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/exercise-strategy.ts\n            \n            interface\n            ExerciseStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/exercise.ts\n            \n            class\n            Exercise\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/file.service.ts\n            \n            injectable\n            FileService\n            \n                33 %\n                (1/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.2.0\n        \n            @angular/cdk : ^19.2.1\n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/material : ^19.2.1\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            rxjs : ~7.8.2\n        \n            tslib : ^2.8.1\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAdvent of Code\nThis is my attempt at resolving the Advent of Code !\nWhere to find the project\nHere is the Github repository :\nExample :https://github.com/opsilonn/advent-of-codeTechnical round-up\nRecommanded setup :\n\nVS Code + Volar (and disable Vetur) + TypeScript Vue Plugin (Volar).\n\nTech used :\n\nVite v^4.4.5.\n\nGetting Started\nOpen a command where the project is located, then :\nExample :Install the dependencies :\n  $npm install\n  \nLaunch the server :\n  $npm run startAuthors\nSee the list of contributors who participated in this project.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nRouterOutlet\n\nRouterOutlet\n\nAppModule -->\n\nRouterOutlet->AppModule\n\n\n\n\n\nFileService\n\nFileService\n\nAppModule -->\n\nFileService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideRouter(routes)]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
